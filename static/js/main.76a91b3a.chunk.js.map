{"version":3,"sources":["assets/badminton.png","assets/gradient-logo.png","styles/shared-spacing.tsx","styles/shared-colors.tsx","styles/shared-text.tsx","components/track/track.component.tsx","utils/hash.tsx","utils/http.utils.tsx","pages/shared-layout/shared-layout.page.tsx","services/storage/storage.constants.tsx","pages/stream/stream.page.tsx","pages/home/home.page.tsx","components/shared/button.component.tsx","services/storage/storage.service.tsx","services/spotify/spotify.types.tsx","pages/account/account.page.tsx","pages/stats/stats.page.tsx","utils/routing.tsx","config.js","services/spotify/spotify.constants.tsx","services/spotify/spotify.service.tsx","components/player/player.component.tsx","components/footer/footer.component.tsx","components/header/header.component.tsx","components/shared/section.component.tsx","components/profile/profile.component.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Spacing","Colors","getAppMargin","isMobile","s24","s224","APP_HEADER_HEIGHT","s64","APP_FOOTER_HEIGHT","FontSizes","ExtraLarge","fontSize","lineHeight","Large","MediumLarge","Medium","MediumSmall","Small","ExtraSmall","Track","props","track","this","backgroundImage","album","images","url","style","styles","artistName","artists","map","artist","name","join","trackTitle","className","coverArt","src","onClick","window","open","external_urls","spotify","renderArtists","renderTrackTitle","React","Component","progress","marginTop","s16","marginBottom","marginRight","hash","location","substring","split","reduce","initial","item","parts","decodeURIComponent","parseJson","response","text","then","JSON","parse","StorageKeys","SharedLayout","children","hasError","isLoading","headerText","subText","Stream","state","currentTrack","undefined","is_playing","progress_ms","likes","setCurrentlyPlayingState","error","setState","setLikesState","onError","SpotifyService","getCurrentlyPlaying","currentlyPlaying","getLikes","items","length","like","index","key","Home","loggedIn","userIsLoggedIn","userProfile","openLink","LOGIN_OAUTH","Button","styleOverride","buttonContainer","button","href","width","display","SpotifyTimeRange","SpotifyTopType","SpotifyErrorMessages","StorageService","storage","localStorage","getItem","data","setItem","console","log","duration","expirationsValue","get","KeyDecay","expirations","Date","now","set","stringify","Object","entries","forEach","val","Number","remove","removeItem","Account","setUserProfile","keys","logout","history","push","reload","profile","imageStyle","image","imageUrl","defaultProfileImage","externalUrl","info","email","country","followers","height","Stats","topArtistsTimeRange","ShortTerm","topTracksTimeRange","setTopsState","getTop","Artists","topArtists","Tracks","topTracks","topArtistsError","topTracksError","type","SpotifyTimeRangeToDisplay","MediumTerm","LongTerm","SpotifyTimeRangeList","timeRangeForType","row","range","toggle","renderTimeRangeButtons","displayKeys","rank","genres","title","flexWrap","s12","s48","AppRoutes","path","page","header","rightAlignedHeader","config","redirectUri","clientId","scopes","PLAYER_API","SAVED_TRACKS_API","USER_PROFILE_API","USER_TOP_API","token","hasTokenInStorage","checkExpiration","SpotifyToken","setExpiration","profileFromStorage","UserProfile","getUserProfile","display_name","total","access_token","tokenFromStorage","resolveTokenInStorage","request","limit","offset","timeRange","method","fetch","headers","errorHandler","bind","message","TokenExpired","Headers","Authorization","Player","resolveUserToken","custom","autoPlay","showSaveIcon","sliderColor","ShareableLavender","savedColor","Footer","footer","position","left","bottom","Header","isRightAligned","keepRightHeaders","route","keepLeftHeaders","filter","exact","to","headerItem","activeStyle","headerItemActive","responsiveHeaderStyle","responsiveLeftHeaderStyle","logo","alt","renderHeaderItem","headerRight","headerContents","paddingLeft","paddingRight","headerLeft","top","backgroundColor","White","color","ScreenBackground","alignItems","justifyContent","marginLeft","cursor","textDecoration","fontFamily","Section","streamSection","s32","Profile","profileContainer","imageStyleOverride","infoKeys","infoValues","textAlign","App","responsiveStyle","routeContainer","component","basename","app","renderRoutes","hot","withSizes","minHeight","flexDirection","c100","paddingTop","paddingBottom","overflow","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mKCA/BC,E,uJAAAA,O,WAAAA,I,WAAAA,I,WAAAA,I,WAAAA,I,cAAAA,I,cAAAA,I,cAAAA,I,cAAAA,I,cAAAA,I,cAAAA,I,iBAAAA,I,kBAAAA,M,KAeL,ICfKC,EDeCC,EAAe,WAA+B,IAA9BC,IAA6B,yDACxD,OAAOA,EAAWH,EAAQI,IAAMJ,EAAQK,MAE7BC,EAAoBN,EAAQO,IAC5BC,EAAoBR,EAAQK,KEnB5BI,EAAY,CACvBC,WAAY,CACVC,SAAU,GACVC,WAAY,QAEdC,MAAO,CACLF,SAAU,GACVC,WAAY,QAEdE,YAAa,CACXH,SAAU,GACVC,WAAY,QAEdG,OAAQ,CACNJ,SAAU,GACVC,WAAY,QAEdI,YAAa,CACXL,SAAU,GACVC,WAAY,QAEdK,MAAO,CACLN,SAAU,GACVC,WAAY,QAEdM,WAAY,CACVP,SAAU,GACVC,WAAY,U,SD3BJX,K,4BAAAA,E,eAAAA,E,eAAAA,E,eAAAA,E,eAAAA,E,eAAAA,E,eAAAA,E,UAAAA,E,2BAAAA,E,aAAAA,E,aAAAA,E,kCAAAA,E,yCAAAA,M,qBEgBCkB,EAAb,kDACE,WAAYC,GAAoB,uCACxBA,GAFV,yGA0BmB,IACPC,EAAUC,KAAKF,MAAfC,MAER,MAAO,CACLE,gBAAgB,OAAD,OAASF,EAAMG,MAAOC,OAAQ,GAAGC,IAAjC,QA9BrB,sCAkCmB,IACPL,EAAUC,KAAKF,MAAfC,MAER,OAAO,yBAAKM,MAAOC,EAAOC,YAAaR,EAAMS,QAASC,KAAI,SAACC,GAAD,OAAiBA,EAAOC,QAAMC,KAAK,SArCjG,yCAwCsB,IACVb,EAAUC,KAAKF,MAAfC,MAER,OAAO,yBAAKM,MAAOC,EAAOO,YAAad,EAAMY,QA3CjD,+BA8CY,IACAZ,EAAUC,KAAKF,MAAfC,MAER,OACE,yBAAKe,UAAU,QAAQT,MAAOC,EAAOP,OAClCA,EACC,kBAAC,WAAD,KACE,yBAAKM,MAAOC,EAAOS,UACjB,yBACED,UAAU,MACVE,IAAKjB,EAAMG,MAAOC,OAAQ,GAAGC,IAC7Ba,QAAS,kBAAMC,OAAOC,KAAKpB,EAAMqB,cAAcC,QAAS,cAG5D,yBAAKP,UAAU,kBACZd,KAAKsB,gBACLtB,KAAKuB,qBAQV,yBAAKlB,MAAOlB,EAAUM,QAAtB,sBAtEV,GAA2B+B,IAAMC,WA6E3BnB,EAA2C,CAC/CoB,SAAU,CACRC,UAAWjD,EAAQkD,KAErBrB,WAAW,eACNpB,EAAUO,aAEfK,MAAO,CACL8B,aAAcnD,EAAQI,KAExBiC,SAAU,CACRe,YAAapD,EAAQkD,KAEvBf,WAAW,eACN1B,EAAUI,Q,iBC1GJwC,EAAYb,OAAOc,SAASD,KACtCE,UAAU,GACVC,MAAM,KACNC,QAAO,SAAUC,EAAcC,GAC9B,GAAIA,EAAM,CACR,IAAMC,EAAQD,EAAKH,MAAM,KACzBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,ICVE,SAASI,EAAUC,GACxB,OAAOA,EAASC,OAAOC,MAAK,SAAUD,GACpC,OAAOA,EAAOE,KAAKC,MAAMH,GAAQ,MDSrCxB,OAAOc,SAASD,KAAO,GEEhB,ICbKe,EDaCC,EAAb,kDACE,WAAYjD,GAAa,uCACjBA,GAFV,kGAOY,IAAD,EACmCE,KAAKF,MAAvCkD,EADD,EACCA,SAAUC,EADX,EACWA,SAAUC,EADrB,EACqBA,UAE5B,OAAID,EAEA,kBAAC,GAAD,CAASE,WAAY,4BAA6BC,QAAS,2CAG3DF,EACK,kBAAC,GAAD,mBAGFF,MAnBX,GAAkCxB,IAAMC,WES3B4B,EAAb,kDACE,WAAYvD,GAAqB,IAAD,8BAC9B,cAAMA,IAEDwD,MAAQ,CACXC,kBAAcC,EACdC,YAAY,EACZC,YAAa,EACbC,MAAO,GACPV,UAAU,GARkB,EADlC,gEAauB,IAAD,OAClBjD,KAAK4D,0BAAyB,SAACC,GAE7B,EAAKC,SAAS,CAAEb,UAAU,OAE5BjD,KAAK+D,eAAc,SAACF,GAElB,EAAKC,SAAS,CAAEb,UAAU,SApBhC,wFAwBiCe,GAxBjC,yFAyB4DC,GAAeC,sBAzB3E,UAyBUC,EAzBV,SA0BYN,EAAUM,EAAVN,OA1BZ,yCA6BaG,EAAQH,IA7BrB,OAgCI7D,KAAK8D,SAAS,CACZP,aAAcY,EAAiB9B,OAjCrC,oLAqCsB2B,GArCtB,yFAsCuCC,GAAeG,WAtCtD,UAsCUT,EAtCV,SAuCYE,EAAUF,EAAVE,OAvCZ,yCA0CaG,EAAQH,IA1CrB,OA6CI7D,KAAK8D,SAAS,CAAEH,MAAOA,EAAMU,QA7CjC,sIAgDY,IAAD,EACmCrE,KAAKsD,MAAvCL,EADD,EACCA,SAAUM,EADX,EACWA,aAAcI,EADzB,EACyBA,MAC1BT,GAAaK,IAAiBI,EAAMW,OAE1C,OACE,kBAAC,EAAD,CAAcrB,SAAUA,EAAUC,UAAWA,GAC3C,kBAAC,WAAD,KACE,kBAAC,GAAD,CAASC,WAAY,qBACnB,kBAAC,EAAD,CAAOpD,MAAOwD,KAEhB,kBAAC,GAAD,CAASJ,WAAY,SAClBQ,EAAMlD,KAAI,SAAC8D,EAAMC,GAChB,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAOzE,MAAOwE,EAAKxE,kBA5DpD,GAA4ByB,IAAMC,WCRrBiD,EAAb,kDACE,WAAY5E,GAAa,IAAD,8BACtB,cAAMA,IAEDwD,MAAQ,CACXL,UAAU,EACV0B,UAAU,EACVzB,WAAW,EACXvC,KAAM,IAPc,EAD1B,gEAYuB,IAAD,OACZgE,EAAWV,GAAeW,iBAC5BD,GACFV,GAAeY,cAAclC,MAAK,SAACkC,GAAD,OAChC,EAAKf,SAAS,CAAEnD,KAAMkE,EAAYlE,KAAKuB,MAAM,KAAK,GAAIgB,WAAW,OAGrElD,KAAK8D,SAAS,CAAEa,eAnBpB,+BAsBY,IAAD,EACyC3E,KAAKsD,MAA7CL,EADD,EACCA,SAAU0B,EADX,EACWA,SAAUhE,EADrB,EACqBA,KAAMuC,EAD3B,EAC2BA,UAElC,OACE,kBAAC,EAAD,CAAcD,SAAUA,EAAUC,UAAWA,IACzCyB,GACA,kBAAC,GAAD,CAASxB,WAAU,WAAcC,QAAS,2DACxC,kBAAC,EAAD,CAAQV,KAAI,mBAAsBoC,SAAUC,MAG/CJ,GACC,kBAAC,GAAD,CACExB,WAAU,kBAAaxC,EAAb,KACVyC,QAAS,wEAnCrB,GAA0B5B,IAAMC,W,iBCLnBuD,EAAb,kDACE,WAAYlF,GAAqB,uCACzBA,GAFV,kGAOY,IAAD,EACyCE,KAAKF,MAA7CmB,EADD,EACCA,QAAS6D,EADV,EACUA,SAAUpC,EADpB,EACoBA,KADpB,IAC0BrC,aAD1B,MACkC,GADlC,EAED4E,EAAa,eACd3E,EAAO4E,gBADO,GAEd7E,GAGL,OACE,yBAAKA,MAAO4E,GACV,uBACE5E,MAAOC,EAAO6E,OACdrE,UAAU,yBACVG,QAAS,kBAAMA,GAAWA,KAC1BmE,KAAMN,QAAsBtB,GAE3Bd,QAtBX,GAA4BlB,IAAMC,WA6B5BnB,EAA2C,CAC/C4E,gBAAiB,CACfG,MAAO,QAETF,OAAQ,CACNG,QAAS,iB,kBH3CDxC,K,mCAAAA,E,yBAAAA,E,4BAAAA,M,KIOL,IC0GKyC,EAMAC,EA2BAC,ED3ICC,EAAiB,qDAC5BC,QAAUC,aADkB,gDAUxBnB,GACF,IACE,OAAOzE,KAAK2F,QAAQE,QAAQpB,GAC5B,MAAOZ,IACT,OAAO,OAdmB,0BAyBxBY,EAAaqB,GACf,IACE9F,KAAK2F,QAAQI,QAAQtB,EAAKqB,GAC1B,MAAOjC,GACPmC,QAAQC,IAAIpC,MA7BY,oCA2CdY,EAAayB,GACzB,IAAMC,EAAwBnG,KAAKoG,IAAItD,EAAYuD,UAC7CC,EAAoBH,GAAoBvD,KAAKC,MAAMsD,IAAsB,GAC/EG,EAAY7B,GAAO8B,KAAKC,MAAQN,EAChClG,KAAKyG,IAAI3D,EAAYuD,SAAUzD,KAAK8D,UAAUJ,MA/CpB,wCAuDH,IACnBA,EADkB,OAEtB,GAAMA,EAAc1D,KAAKC,MAAM7C,KAAKoG,IAAItD,EAAYuD,WAAa,QAAjE,CAGA,IAAMG,EAAMD,KAAKC,MAEjBG,OAAOC,QAAQN,GAAaO,SAAQ,YAAiB,IAAD,mBAAdpC,EAAc,KAATqC,EAAS,KAC9CN,GAAOO,OAAOD,KAGlB,EAAKE,OAAOvC,UACL6B,EAAY7B,OAGrBzE,KAAKyG,IAAI3D,EAAYuD,SAAUzD,KAAK8D,UAAUJ,OAtEpB,6BA+ErB7B,GACL,IACEzE,KAAK2F,QAAQsB,WAAWxC,GACxB,MAAOZ,SAlFiB,MEUjBqD,EAAb,kDACE,WAAYpH,GAAa,IAAD,8BACtB,cAAMA,IAEDwD,MAAQ,CACXL,UAAU,EACV4B,YAAa,IALO,EAD1B,gEAUuB,IAAD,OAClB7E,KAAKmH,gBAAe,WAClB,EAAKrD,SAAS,CAAEb,UAAU,SAZhC,8EAgBuBe,GAhBvB,yFAiB8BC,GAAeY,cAjB7C,UAiBUA,EAjBV,SAkBYhB,EAAUgB,EAAVhB,OAlBZ,yCAqBaG,EAAQH,IArBrB,OAwBI7D,KAAK8D,SAAS,CAAEe,gBAxBpB,sIA4BI8B,OAAOS,KAAKtE,GAAa+D,SAAQ,SAACpC,GAAD,OAASiB,EAAesB,OAAQlE,EAAoB2B,OACrFR,GAAeoD,SACfrH,KAAKF,MAAMwH,QAAQC,KAAK,KACxBrG,OAAOc,SAASwF,WA/BpB,+BAkCY,IAAD,SAC2BxH,KAAKsD,MAA/BL,EADD,EACCA,SAAU4B,EADX,EACWA,YAElB,OACE,kBAAC,EAAD,CAAc5B,SAAUA,EAAUC,WAAW,GAC3C,kBAAC,GAAD,CAASC,WAAU,uBACjB,kBAAC,GAAD,CACE9C,MAAOC,EAAOmH,QACdC,WAAYpH,EAAOqH,MACnBC,SAAU/C,EAAY+C,UAAYC,IAClCC,YAAajD,EAAYiD,YACzBC,KAAM,CACJpH,KAAMkE,EAAYlE,KAClBqH,MAAOnD,EAAYmD,MACnBC,QAASpD,EAAYoD,QACrBC,UAAWrD,EAAYqD,cAI7B,kBAAC,GAAD,KACE,kBAAC,EAAD,CACExF,KAAM,SACNzB,QAAS,WACP,EAAKoG,kBAzDnB,GAA6B7F,IAAMC,WAkE7BnB,EAA2C,CAC/CmH,QAAS,CACPpC,MAAO,KAETsC,MAAO,CACLtC,MAAO,GACP8C,OAAQ,S,QCxECC,EAAb,kDACE,WAAYtI,GAAa,IAAD,8BACtB,cAAMA,IAEDwD,MAAQ,CACX+E,oBAAqB9C,EAAiB+C,UACtCC,mBAAoBhD,EAAiB+C,UACrCrF,UAAU,EACVC,WAAW,GAPS,EAD1B,gEAYuB,IAAD,OAClBlD,KAAKwI,cAAa,kBAAM,EAAK1E,SAAS,CAAEb,UAAU,SAbtD,4EAgBqBe,GAhBrB,4FAiBwDhE,KAAKsD,MAAjD+E,EAjBZ,EAiBYA,oBAAqBE,EAjBjC,EAiBiCA,mBAjBjC,SAkB0CtE,GAAewE,OAAOjD,EAAekD,QAASL,GAlBxF,cAkBUM,EAlBV,gBAmByC1E,GAAewE,OAAOjD,EAAeoD,OAAQL,GAnBtF,UAmBUM,EAnBV,OAqBmBC,EAAoBH,EAA3B9E,MACOkF,EAAmBF,EAA1BhF,OAEJiF,IAAmBC,EAxB3B,0CAyBa/E,EAAQ8E,EAAiBC,IAzBtC,QA4BI/I,KAAK8D,SAAS,CAAE6E,aAAYE,YAAW3F,WAAW,IA5BtD,qJA+ByB8F,GAAuB,IAAD,SACrCC,GAAyB,mBAC5B1D,EAAiB+C,UAAY,gBADD,cAE5B/C,EAAiB2D,WAAa,iBAFF,cAG5B3D,EAAiB4D,SAAW,sBAHA,GAKzBC,EAAuB,CAAC7D,EAAiB+C,UAAW/C,EAAiB2D,WAAY3D,EAAiB4D,UAClGE,EAAmBL,IAASxD,EAAekD,QAAU,sBAAwB,qBAEnF,OACE,yBAAKrI,MAAOC,EAAOgJ,KAChBF,EAAqB3I,KAAI,SAAC8I,EAAO/E,GAChC,OACE,yBAAKC,IAAKD,EAAOnE,MAAOC,EAAOkJ,QAC7B,kBAAC,EAAD,CACE9G,KAAMuG,EAA0BM,GAChCtI,QAAS,WAEP,EAAK6C,SAAL,eAAwBuF,EAAmBE,IAAS,kBAClD,EAAKf,cAAa,kBAAM,EAAK1E,SAAS,CAAEb,UAAU,oBAlDtE,+BA6DY,IAAD,IACyFjD,KAAKsD,MAA7FL,EADD,EACCA,SAAU0F,EADX,EACWA,WAAYE,EADvB,EACuBA,UAAW3F,EADlC,EACkCA,UAAWmF,EAD7C,EAC6CA,oBAAqBE,EADlE,EACkEA,mBACnEU,GAAyB,mBAC5B1D,EAAiB+C,UAAY,gBADD,cAE5B/C,EAAiB2D,WAAa,iBAFF,cAG5B3D,EAAiB4D,SAAW,sBAHA,GAM/B,OACE,kBAAC,EAAD,CAAclG,SAAUA,EAAUC,UAAWA,GAC3C,6BACE,kBAAC,GAAD,CAASC,WAAU,uBAAkB8F,EAA0BZ,GAA5C,MAChBrI,KAAKyJ,uBAAuBjE,EAAekD,SAC5C,yBAAKrI,MAAOC,EAAOgJ,KAChBX,GACCA,EAAYtE,MAAO5D,KAAI,SAACC,EAAuB8D,GAC7C,OACE,kBAAC,GAAD,CACEC,IAAKD,EACLnE,MAAOC,EAAOmH,QACdC,WAAYpH,EAAOqH,MACnBC,SAAUlH,EAAOP,OAAQ,GAAGC,IAC5B0H,YAAapH,EAAOU,cAAcC,QAClCqI,aAAa,EACb3B,KAAM,CACJ4B,KAAK,GAAD,OAAKnF,EAAQ,GACjB7D,KAAMD,EAAOC,KACbiJ,OAAQlJ,EAAOkJ,OAAQhJ,KAAK,eAQ5C,6BACE,kBAAC,GAAD,CAASuC,WAAU,sBAAiB8F,EAA0BV,GAA3C,MAChBvI,KAAKyJ,uBAAuBjE,EAAeoD,QAC5C,yBAAKvI,MAAOC,EAAOgJ,KAChBT,GACCA,EAAWxE,MAAO5D,KAAI,SAACV,EAAcyE,GACnC,OACE,kBAAC,GAAD,CACEC,IAAKD,EACLnE,MAAOC,EAAOmH,QACdC,WAAYpH,EAAOqH,MACnBC,SAAU7H,EAAMG,MAAOC,OAAQ,GAAGC,IAClC0H,YAAa/H,EAAMqB,cAAcC,QACjCqI,aAAa,EACb3B,KAAM,CACJ4B,KAAK,GAAD,OAAKnF,EAAQ,GACjBqF,MAAO9J,EAAMY,KACbD,OAAQX,EAAMS,QAAS,GAAGG,mBAjHlD,GAA2Ba,IAAMC,WA8H3BnB,EAA2C,CAC/CgJ,IAAK,CACHhE,QAAS,OACTwE,SAAU,QAEZrC,QAAS,CACPpC,MAAO,IACPxD,aAAcnD,EAAQqL,IACtBjI,YAAapD,EAAQsL,KAEvBrC,MAAO,CACLtC,MAAO,IACP8C,OAAQ,KAEVqB,OAAQ,CACN3H,aAAcnD,EAAQkD,IACtBE,YAAapD,EAAQkD,MChJZqI,EAAwB,CAEnC,CACEC,KAAM,IACNC,KAAMzF,EACN0F,OAAQ,aAEV,CACEF,KAAM,UACNC,KAAM9G,EACN+G,OAAQ,UAEV,CACEF,KAAM,WACNC,KAAMjD,EACNkD,OAAQ,UACRC,oBAAoB,GAEtB,CACEH,KAAM,SACNC,KAAM/B,EACNgC,OAAQ,UCjBNE,EAJO,CACXC,YAAa,yCAKA,eAEbC,SAAU,mCACVC,OAxBoB,CACpB,gBACA,8BACA,2BACA,oBACA,YACA,kBACA,oBACA,wBAmBGH,GCvBQI,EAAU,UADa,0BACb,iBACVC,GAAgB,UAFO,0BAEP,iBAChBC,GAAgB,UAHO,0BAGP,UAChBC,GAAY,UAJW,0BAIX,cAIZ9F,GAAW,UADA,yCACA,sBAA4BuF,EAAOE,SAAnC,yBACtBF,EAAOC,YADe,kBAEdD,EAAOG,OAAO7J,KAAK,OAFL,0C,SLsGZ2E,K,uBAAAA,E,yBAAAA,E,sBAAAA,M,cAMAC,K,kBAAAA,E,iBAAAA,M,cA2BAC,K,yCAAAA,M,KMrIL,IAAMxB,GAAiB,eAE5B,aAAe,yBADP6G,MAAgB,GADI,kEAUEC,EAA4BD,GACnDC,EAIHrF,EAAesF,mBAHftF,EAAee,IAAI3D,EAAYmI,aAAcH,GAC7CpF,EAAewF,cAAcpI,EAAYmI,aAAc,SAb/B,+BAoB1BjL,KAAK8K,MAAQ,KApBa,6KAwBpBK,EAAqBzF,EAAeU,IAAItD,EAAYsI,aAxBhC,iCA2BDpL,KAAKqL,iBA3BJ,cA2BlB5I,EA3BkB,OA4BF9B,EAAkE8B,EAAhF6I,aAAoBlK,EAA4DqB,EAA5DrB,cAAejB,EAA6CsC,EAA7CtC,OAAQ6H,EAAqCvF,EAArCuF,MAAOC,EAA8BxF,EAA9BwF,QAASC,EAAqBzF,EAArByF,UAAWrE,EAAUpB,EAAVoB,MACxE+D,EAAWzH,GAAUA,EAAOmE,QAAUnE,EAAO,GAAGC,IAChD0H,EAAc1G,GAAiBA,EAAcC,QAE7CwD,EAAc,CAClBlE,OACAmH,cACAE,QACAC,UACAL,WACAM,UAAWA,GAAaA,EAAUqD,MAClC1H,SAEF6B,EAAee,IAAI3D,EAAYsI,YAAaxI,KAAK8D,UAAU7B,IAzCnC,kBA0CjBA,GA1CiB,iCA4CjBjC,KAAKC,MAAMsI,IA5CM,8IAiD1B,QAASnL,KAAK8K,QAjDY,yCAsD1B9K,KAAK8K,MAAQ/I,EAAKyJ,aAClB,IAAMC,EAAmB/F,EAAeU,IAAItD,EAAYmI,cAExD,OAAMQ,GAAsBzL,KAAK8K,OAC/B9K,KAAK8K,MAAQW,GAAoBzL,KAAK8K,MACtC9K,KAAK0L,wBAAwBD,EAAkBzL,KAAK8K,OAC7C9K,KAAK8K,OAEP,KA9DmB,uCAkE1B,OAAO9K,KAAK2L,QAAQf,GAAkB,SAlEZ,4CAuE1B,OAAO5K,KAAK2L,QAAQjB,EAAY,SAvEN,iCA0E8C,IAAjEkB,EAAgE,uDAAhD,GAAIC,EAA4C,uDAA3B,EAC5C,OAAO7L,KAAK2L,QAAL,UAAgBhB,GAAhB,kBAA0CiB,EAA1C,mBAA0DC,GAAU,SA3EjD,6BA+E1B7C,GAIe,IAHf8C,EAGc,uDAHgBvG,EAAiB+C,UAC/CsD,EAEc,uDAFE,GAChBC,EACc,uDADG,EAEjB,OAAO7L,KAAK2L,QAAL,UAAgBd,GAAhB,YAAgC7B,EAAhC,kBAA8C4C,EAA9C,mBAA8DC,EAA9D,uBAAmFC,GAAa,SApF7E,8BAuFpB1L,EAAa2L,GACnB,OAAOC,MAAM5L,EAAK,CAChB2L,OAAQA,EACRE,QAASjM,KAAKiM,UAEbtJ,KAAKH,GACLG,KAAK3C,KAAKkM,aAAaC,KAAKnM,SA7FL,mCAgGfyC,GAAgB,IACnBoB,EAAUpB,EAAVoB,MACR,GAAIA,EACF,OAAQA,EAAMuI,SACZ,KAAK3G,EAAqB4G,aACxB3G,EAAesB,OAAOlE,EAAYmI,cAGxC,OAAOxI,IAxGmB,8BAK1B,OAAO,IAAI6J,QAAQ,CACjBC,cAAe,UAAYvM,KAAK8K,YANR,MCAjB0B,GAAb,kDACE,WAAY1M,GAAa,IAAD,8BACtB,cAAMA,IAEDwD,MAAQ,CACXwH,MAAO,IAJa,EAD1B,gEAUI,IAAMA,EAAQ7G,GAAewI,mBACzB3B,GACF9K,KAAK8D,SAAS,CAAEgH,YAZtB,+BAiBI,OAAO,kBAAC,IAAD,CAAexK,OAAQA,GAAOoM,OAAQ5B,MAAO9K,KAAKsD,MAAMwH,MAAO6B,UAAU,EAAMC,cAAc,QAjBxG,GAA4BpL,IAAMC,WAqB5BnB,GAA6D,CACjEoM,OAAQ,CACNG,YAAalO,EAAOmO,kBACpBC,WAAYpO,EAAOmO,oBCjCVE,GAAb,kDACE,WAAYlN,GAAa,uCACjBA,GAFV,kGAQI,OACE,yBAAKO,MAAOC,GAAO2M,QACjB,kBAAC,GAAD,WAVR,GAA4BzL,IAAMC,WAgB5BnB,GAA8C,CAClD2M,OAAQ,CACNC,SAAU,QACVC,KAAM,EACNC,OAAQ,EACR/H,MAAO,S,oBCbEgI,GAAb,kDACE,WAAYvN,GAAa,uCACjBA,GAFV,4GAOqD,IAAlCwN,EAAiC,wDAC1CC,EAAmB,SAACC,GACxB,OAAQA,EAAMpD,QAAWoD,EAAMpD,SAAuC,IAA7BoD,EAAMnD,oBAE3CoD,EAAkB,SAACD,GACvB,OAAQA,EAAMpD,QAAWoD,EAAMpD,SAAWoD,EAAMnD,oBAGlD,OAAOJ,EAAUyD,QAAO,SAACF,GAAD,OAAYF,EAAiBC,EAAiBC,GAASC,EAAgBD,MAAS/M,KACtG,SAAC+M,GACC,OACE,kBAAC,IAAD,CACE/I,IAAK+I,EAAMtD,KACXyD,OAAK,EACLC,GAAIJ,EAAMtD,KACV7J,MAAOC,GAAOuN,WACdC,YAAaxN,GAAOyN,kBAEnBP,EAAMpD,aAzBnB,+BAuDI,OACE,yBAAK/J,MAAOC,GAAO8J,QACjB,yBAAK/J,MAAOL,KAAKgO,uBACf,yBAAK3N,MAAOL,KAAKiO,2BACf,kBAAC,IAAD,CAASN,OAAK,EAACC,GAAI,IAAKvN,MAAOC,GAAOuN,WAAYC,YAAaxN,GAAOyN,kBACpE,yBAAK1N,MAAOC,GAAO4N,KAAMlN,IAAKkN,KAAMC,IAAI,UAEzCnO,KAAKoO,oBAER,yBAAK/N,MAAOC,GAAO+N,aAAcrO,KAAKoO,kBAAiB,QAhEjE,4CAgC+B,IACnBvP,EAAamB,KAAKF,MAAlBjB,SACJmP,EAAqB,eACpB1N,GAAOgO,eADa,CAEvBC,YAAa3P,EAAaC,GAC1B2P,aAAc5P,EAAaC,KAS7B,OAPIA,IACFmP,EAAqB,eAChBA,EADgB,CAEnB3O,SAAW2O,EAAsB3O,SAAsB,KAIpD2O,IA9CX,gDAiDmC,IACvBnP,EAAamB,KAAKF,MAAlBjB,SACR,OAAO,eAAKyB,GAAOmO,WAAnB,CAA+BpJ,MAAOxG,EAAW,IAAM,UAnD3D,GAA4B2C,IAAMC,WAuE5BnB,GAA8C,CAClD8J,OAAQ,CACN/E,MAAO,OACP6H,SAAU,QACVC,KAAM,EACNuB,IAAK,EACLC,gBAAiBhQ,EAAOiQ,MACxBC,MAAOlQ,EAAOmQ,iBACd3G,OAAQnJ,GAEVsP,eAAe,aACbhJ,QAAS,OACTyJ,WAAY,SACZ5G,OAAQ,QACLhJ,EAAUM,QAEfyO,KAAM,CACJ7I,MAAO,GACP8C,OAAQ,IAEVsG,WAAY,CACVnJ,QAAS,OACTyJ,WAAY,SACZC,eAAgB,gBAChB3J,MAAO,KAETgJ,YAAa,CACX/I,QAAS,OACT2J,WAAY,QAEdpB,WAAY,CACVvI,QAAS,OACT4J,OAAQ,UACRC,eAAgB,OAChBN,MAAOlQ,EAAOmQ,kBAEhBf,iBAAkB,CAChBqB,WAAY,qBChHHC,GAAb,kDACE,WAAYvP,GAAa,uCACjBA,GAFV,kGAOY,IAAD,EACmCE,KAAKF,MAAvCqD,EADD,EACCA,WAAYC,EADb,EACaA,QAASJ,EADtB,EACsBA,SAC7B,OACE,yBAAK3C,MAAOC,GAAOgP,eAChBnM,GAAc,yBAAK9C,MAAOC,GAAO6C,YAAaA,GAC9CC,GAAW,yBAAK/C,MAAOC,GAAO8C,SAAUA,GACxCJ,OAbT,GAA6BxB,IAAMC,WAmB7BnB,GAA2C,CAC/CgP,cAAe,CACb3N,UAAWjD,EAAQ6Q,KAErBpM,WAAW,aACTtB,aAAcnD,EAAQkD,IACtBwN,WAAY,oBACTjQ,EAAUM,QAEf2D,QAAS,CACPvB,aAAcnD,EAAQkD,IACtBwN,WAAY,mBC1BHI,GAAb,kDACE,WAAY1P,GAAa,uCACjBA,GAFV,kGAOY,IAAD,EACwEE,KAAKF,MAA5E8H,EADD,EACCA,SAAUE,EADX,EACWA,YAAaC,EADxB,EACwBA,KAAM1H,EAD9B,EAC8BA,MAAOqH,EADrC,EACqCA,WADrC,IACiDgC,mBADjD,SAEDzE,EAAa,eACd3E,GAAOmP,iBADO,GAEdpP,GAECqP,EAAkB,eACnBpP,GAAOqH,MADY,GAEnBD,GAGL,OACE,yBAAKrH,MAAO4E,GACV,6BACE,yBACEnE,UAAU,MACVT,MAAOqP,EACP1O,IAAK4G,EACL3G,QAAS,kBAAMC,OAAOC,KAAK2G,EAAa,cAG3C4B,GACC,yBAAKrJ,MAAOC,GAAOqP,UAChBhJ,OAAOS,KAAKW,GAAMtH,KAAI,SAACgE,GACtB,OAAO,yBAAKA,IAAKA,GAAMA,OAI7B,yBAAKpE,MAAOC,GAAOsP,YAChBjJ,OAAOS,KAAKW,GAAMtH,KAAI,SAACgE,GACtB,OAAO,yBAAKA,IAAKA,GAAMsD,EAAKtD,aArCxC,GAA6BjD,IAAMC,WA6C7BnB,GAA2C,CAC/CmP,iBAAkB,CAChBnK,QAAS,OACT0J,eAAgB,cAElBrH,MAAO,CACL7F,YAAapD,EAAQkD,KAEvB+N,SAAU,CACRE,UAAW,QACX/N,YAAapD,EAAQqL,KAEvB6F,WAAY,CACVR,WAAY,qBC/CVU,I,wDACJ,WAAYhQ,GAAkB,IAAD,8BAC3B,cAAMA,IAEDwD,MAAQ,CACXqB,UAAU,GAJe,E,gLASrBmG,EAAQ7G,GAAewI,mBAC7BzM,KAAK8D,SAAS,CAAEa,WAAYmG,I,2IAGd,IACNnG,EAAa3E,KAAKsD,MAAlBqB,SACA9F,EAAamB,KAAKF,MAAlBjB,SAEJkR,EAAe,eACdzP,GAAO0P,eADO,CAEjBf,WAAYrQ,EAAaC,GACzBiD,YAAalD,EAAaC,KAG5B,OACE,yBAAKwB,MAAO0P,IACRpL,GAAY,kBAAC,EAAD,MACbA,GACC,kBAAC,IAAD,KACGsF,EAAUxJ,KAAI,SAAC+M,GAAW,IACjBtD,EAAesD,EAAftD,KAAMC,EAASqD,EAATrD,KACd,OAAO,kBAAC,IAAD,CAAO1F,IAAK+I,EAAMtD,KAAMyD,OAAK,EAACzD,KAAMA,EAAM+F,UAAW9F,W,+BAQ9D,IACAxF,EAAa3E,KAAKsD,MAAlBqB,SACA9F,EAAamB,KAAKF,MAAlBjB,SAER,OACE,kBAAC,IAAD,CAAQqR,SAAS,eACf,yBAAK7P,MAAOC,GAAO6P,KACjB,kBAAC,GAAD,CAAQtR,SAAUA,IACjBmB,KAAKoQ,eACLzL,GAAY,kBAAC,GAAD,Y,GAhDLnD,IAAMC,YA2DT4O,iBAAIC,KAJK,SAAC,GAAD,MAAqB,CAC3CzR,SADsB,EAAGwG,MACP,OAGDiL,CAA2BR,KAExCxP,GAA8C,CAClD6P,IAAK,CACHxB,gBAAiBhQ,EAAOmQ,iBACxByB,UAAW,QACXjL,QAAS,OACTkL,cAAe,SACf3B,MAAOlQ,EAAO8R,KACdrB,WAAY,kBAGdY,eAAgB,CACdU,WAAY1R,EACZ2R,cAAezR,EACf0R,SAAU,WCrFMC,QACW,cAA7B3P,OAAOc,SAAS8O,UAEe,UAA7B5P,OAAOc,SAAS8O,UAEhB5P,OAAOc,SAAS8O,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5O,MAAK,SAAA6O,GACJA,EAAaC,gBAEdC,OAAM,SAAA7N,GACLmC,QAAQnC,MAAMA,EAAMuI,c","file":"static/js/main.76a91b3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/badminton.c7bae4fd.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-logo.55240fe4.png\";","export enum Spacing {\n  s0 = 0,\n  s2 = 2,\n  s4 = 4,\n  s8 = 8,\n  s12 = 12,\n  s16 = 16,\n  s24 = 24,\n  s32 = 32,\n  s48 = 48,\n  s64 = 64,\n  s128 = 128,\n  s224 = 224,\n}\n\nexport const getAppMargin = (isMobile: boolean = true) => {\n  return isMobile ? Spacing.s24 : Spacing.s224;\n};\nexport const APP_HEADER_HEIGHT = Spacing.s64;\nexport const APP_FOOTER_HEIGHT = Spacing.s224;\n","export enum Colors {\n  // brand colors\n  ShareableLavender = '#90a7ee',\n  // blacks/greys/white\n  c600 = '#1C2124', // body text\n  c500 = '#66747D', // subdued text\n  c400 = '#86939C', // Icon default\n  c300 = '#C7D0D6', // input outline\n  c200 = '#E4E9ED', // card outline\n  c100 = '#F5F8FA', // background and disabled\n  c0 = '#FFF', // white\n  // TODO: add more colors\n  // Helper Colors\n  ScreenBackground = '#282c34',\n  White = '#fff',\n  Black = '#000',\n  Transparent = 'rgba(52, 52, 52, 0)',\n  TransparentDark = 'rgba(52, 52, 52, 0.9)',\n}\n","export const FontSizes = {\n  ExtraLarge: {\n    fontSize: 48,\n    lineHeight: '54px',\n  },\n  Large: {\n    fontSize: 36,\n    lineHeight: '54px',\n  },\n  MediumLarge: {\n    fontSize: 28,\n    lineHeight: '36px',\n  },\n  Medium: {\n    fontSize: 20,\n    lineHeight: '30px',\n  },\n  MediumSmall: {\n    fontSize: 14,\n    lineHeight: '20px',\n  },\n  Small: {\n    fontSize: 12,\n    lineHeight: '18px',\n  },\n  ExtraSmall: {\n    fontSize: 11,\n    lineHeight: '16px',\n  },\n};\n","import React, { Fragment } from 'react';\n\nimport './track.css';\nimport './track.scss';\n\nimport { Track as TrackType } from '../../services';\nimport { Spacing, FontSizes } from '../../styles';\n\ninterface TrackProps {\n  track: TrackType;\n  is_playing?: any;\n  progress_ms?: any;\n}\n\ninterface TrackState {}\n\nexport class Track extends React.Component<TrackProps, TrackState> {\n  constructor(props: TrackProps) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  // backgroundStyles() {\n  //   const { track } = this.props;\n  //   console.log(track);\n\n  //   return {\n  //     backgroundImage: `url(${track.album!.images![0].url})`,\n  //     width: 500,\n  //     height: 500,\n  //   };\n  // }\n\n  // progressBarStyles() {\n  //   const { track } = this.props;\n\n  //   return {\n  //     width: (this.props.progress_ms * 100) / track.duration_ms + '%',\n  //   };\n  // }\n\n  coverArtStyle() {\n    const { track } = this.props;\n\n    return {\n      backgroundImage: `url(${track.album!.images![0].url})`,\n    };\n  }\n\n  renderArtists() {\n    const { track } = this.props;\n\n    return <div style={styles.artistName}>{track.artists!.map((artist: any) => artist.name).join(', ')}</div>;\n  }\n\n  renderTrackTitle() {\n    const { track } = this.props;\n\n    return <div style={styles.trackTitle}>{track.name}</div>;\n  }\n\n  render() {\n    const { track } = this.props;\n\n    return (\n      <div className=\"track\" style={styles.track}>\n        {track ? (\n          <Fragment>\n            <div style={styles.coverArt}>\n              <img\n                className=\"art\"\n                src={track.album!.images![0].url}\n                onClick={() => window.open(track.external_urls.spotify, '_blank')}\n              />\n            </div>\n            <div className=\"track__content\">\n              {this.renderArtists()}\n              {this.renderTrackTitle()}\n              {/* <div style={styles.progress} className=\"progress\"> */}\n              {/* <div className=\"progress__bar\" style={this.progressBarStyles()} /> */}\n              {/* <SpotifyPlayer token={this.state.token} uris={[]} /> */}\n              {/* </div> */}\n            </div>\n          </Fragment>\n        ) : (\n          <div style={FontSizes.Medium}>Nothing found</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  progress: {\n    marginTop: Spacing.s16,\n  },\n  artistName: {\n    ...FontSizes.MediumSmall,\n  },\n  track: {\n    marginBottom: Spacing.s24,\n  },\n  coverArt: {\n    marginRight: Spacing.s16,\n  },\n  trackTitle: {\n    ...FontSizes.Large,\n  },\n};\n","// Get the hash of the url\nexport const hash: any = window.location.hash\n  .substring(1)\n  .split('&')\n  .reduce(function (initial: any, item: string) {\n    if (item) {\n      const parts = item.split('=');\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = '';\n","export function parseJson(response: any) {\n  return response.text().then(function (text: any) {\n    return text ? JSON.parse(text) : {};\n  });\n}\n","import React from 'react';\n\nimport { Section } from '../../components';\n\nexport interface SharedLayoutProps {\n  hasError: boolean;\n  isLoading: boolean;\n}\nexport interface SharedLayoutState {}\n\n/**\n * Responsible for shared page layout and states\n */\nexport class SharedLayout extends React.Component<SharedLayoutProps, SharedLayoutState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { children, hasError, isLoading } = this.props;\n\n    if (hasError) {\n      return (\n        <Section headerText={'Something bad happened...'} subText={'Please refresh the page and try again.'}></Section>\n      );\n    }\n    if (isLoading) {\n      return <Section>Loading...</Section>;\n    }\n\n    return children;\n  }\n}\n","export enum StorageKeys {\n  SpotifyToken = 'shrbl_spotify_token',\n  UserProfile = 'shrbl_user',\n  KeyDecay = 'shrbl_key_decay',\n}\n","import React, { Fragment } from 'react';\n\nimport { Track, Section } from '../../components';\nimport {\n  TracksEntity,\n  SpotifyService,\n  SpotifyError,\n  CurrentPlaybackResponse,\n  LikesResponse,\n  Track as TrackType,\n} from '../../services';\nimport { SharedLayout } from '../shared-layout';\n\ninterface StreamProps {}\ninterface StreamState {\n  hasError: boolean;\n  currentTrack: TrackType | undefined;\n  is_playing: boolean;\n  progress_ms: number;\n  likes: TracksEntity[];\n}\n\nexport class Stream extends React.Component<StreamProps, StreamState> {\n  constructor(props: StreamProps) {\n    super(props);\n\n    this.state = {\n      currentTrack: undefined,\n      is_playing: true,\n      progress_ms: 0,\n      likes: [],\n      hasError: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setCurrentlyPlayingState((error: SpotifyError) => {\n      // Something bad happened\n      this.setState({ hasError: true });\n    });\n    this.setLikesState((error: SpotifyError) => {\n      // Something bad happened\n      this.setState({ hasError: true });\n    });\n  }\n\n  async setCurrentlyPlayingState(onError: Function) {\n    const currentlyPlaying: CurrentPlaybackResponse = await SpotifyService.getCurrentlyPlaying();\n    const { error } = currentlyPlaying;\n\n    if (error) {\n      return onError(error);\n    }\n\n    this.setState({\n      currentTrack: currentlyPlaying.item,\n    });\n  }\n\n  async setLikesState(onError: Function) {\n    const likes: LikesResponse = await SpotifyService.getLikes();\n    const { error } = likes;\n\n    if (error) {\n      return onError(error);\n    }\n\n    this.setState({ likes: likes.items! });\n  }\n\n  render() {\n    const { hasError, currentTrack, likes } = this.state;\n    const isLoading = !currentTrack && !likes.length;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={isLoading}>\n        <Fragment>\n          <Section headerText={'Currently playing'}>\n            <Track track={currentTrack!} />\n          </Section>\n          <Section headerText={'Likes'}>\n            {likes.map((like, index) => {\n              return <Track key={index} track={like.track} />;\n            })}\n          </Section>\n        </Fragment>\n      </SharedLayout>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Section, Button } from '../../components';\nimport { SharedLayout } from '../shared-layout';\nimport { SpotifyService, LOGIN_OAUTH } from '../../services';\n\ninterface HomeProps {}\ninterface HomeState {\n  hasError: boolean;\n  loggedIn: boolean;\n  isLoading: boolean;\n  name: string;\n}\n\nexport class Home extends React.Component<HomeProps, HomeState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      loggedIn: false,\n      isLoading: true,\n      name: '',\n    };\n  }\n\n  componentDidMount() {\n    const loggedIn = SpotifyService.userIsLoggedIn();\n    if (loggedIn) {\n      SpotifyService.userProfile().then((userProfile) =>\n        this.setState({ name: userProfile.name.split(' ')[0], isLoading: false })\n      );\n    }\n    this.setState({ loggedIn });\n  }\n\n  render() {\n    const { hasError, loggedIn, name, isLoading } = this.state;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={isLoading}>\n        {!loggedIn && (\n          <Section headerText={`Welcome!`} subText={'Please login with your spotify credentials to continue.'}>\n            <Button text={`Login to Spotify`} openLink={LOGIN_OAUTH} />\n          </Section>\n        )}\n        {loggedIn && (\n          <Section\n            headerText={`Welcome ${name}!`}\n            subText={'You can now listen to music and view your personalized stream.'}\n          ></Section>\n        )}\n      </SharedLayout>\n    );\n  }\n}\n","import React, { CSSProperties } from 'react';\n\ninterface ButtonProps {\n  onClick?: Function;\n  openLink?: string;\n  text: string;\n  style?: CSSProperties;\n}\n\nexport class Button extends React.Component<ButtonProps> {\n  constructor(props: ButtonProps) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { onClick, openLink, text, style = {} } = this.props;\n    const styleOverride = {\n      ...styles.buttonContainer,\n      ...style,\n    };\n\n    return (\n      <div style={styleOverride}>\n        <a\n          style={styles.button}\n          className=\"btn btn--loginApp-link\"\n          onClick={() => onClick && onClick()}\n          href={openLink ? openLink : undefined}\n        >\n          {text}\n        </a>\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  buttonContainer: {\n    width: '100%',\n  },\n  button: {\n    display: 'inline-block',\n  },\n};\n","import { StorageKeys } from './storage.constants';\n\n/**\n * This is a wrapper around localStorage with:\n * 1. fallback to in memory storage in case local storage is not available\n * 2. option to add expiration time to  values\n */\nexport const StorageService = new (class {\n  storage = localStorage;\n\n  /** Gets a stored value if exists\n   * returns null if not exist or in case of error .\n   * @memberof LocalStoreService\n   * @method get\n   * @param {string} key\n   * @return {string | null}\n   */\n  get(key: string): string | null {\n    try {\n      return this.storage.getItem(key);\n    } catch (error) {}\n    return null;\n  }\n\n  /** Sets data for a key in storage\n   * in case of error accessing localStorage, will change storage mode to in memory\n   * @memberof LocalStoreService\n   * @method set\n   * @param {string} key\n   * @param {string} data\n   * @return {void}\n   */\n  set(key: string, data: string): void {\n    try {\n      this.storage.setItem(key, data);\n    } catch (error) {\n      console.log(error);\n      // this.storage = new TempStorage();\n      // this.storage.setItem(key, data);\n    }\n  }\n\n  /** Sets expiration time for a key.\n   * key references a key in the local store\n   * @memberof LocalStoreService\n   * @method setExpiration\n   * @param {string} key\n   * @param {number} duration\n   * @return {void}\n   */\n  setExpiration(key: string, duration: number): void {\n    const expirationsValue: any = this.get(StorageKeys.KeyDecay);\n    const expirations: any = (expirationsValue && JSON.parse(expirationsValue)) || {};\n    expirations[key] = Date.now() + duration;\n    this.set(StorageKeys.KeyDecay, JSON.stringify(expirations));\n  }\n\n  /** Removes expired keys from local store\n   * @memberof LocalStoreService\n   * @method checkExpiration\n   * @return {void}\n   */\n  checkExpiration(): void {\n    let expirations: any;\n    if (!(expirations = JSON.parse(this.get(StorageKeys.KeyDecay) || 'null'))) {\n      return;\n    }\n    const now = Date.now();\n\n    Object.entries(expirations).forEach(([key, val]) => {\n      if (now <= Number(val)) {\n        return;\n      }\n      this.remove(key);\n      delete expirations[key];\n    });\n\n    this.set(StorageKeys.KeyDecay, JSON.stringify(expirations));\n  }\n\n  /** Removes a key from the store\n   * @memberof LocalStoreService\n   * @method removeItem\n   * @param {string} key\n   * @return {void}\n   */\n  remove(key: string): void {\n    try {\n      this.storage.removeItem(key);\n    } catch (error) {}\n  }\n})();\n","// Currently Playing\nexport interface CurrentPlaybackResponse {\n  device: Device;\n  shuffle_state: boolean;\n  repeat_state: string;\n  timestamp: number;\n  context: Context;\n  progress_ms: number;\n  item: Track;\n  currently_playing_type: string;\n  actions: Actions;\n  is_playing: boolean;\n  error?: SpotifyError;\n}\nexport interface Device {\n  id: string;\n  is_active: boolean;\n  is_private_session: boolean;\n  is_restricted: boolean;\n  name: string;\n  type: string;\n  volume_percent: number;\n}\nexport interface Context {\n  external_urls: ExternalUrls;\n  href: string;\n  type: string;\n  uri: string;\n}\nexport interface ExternalUrls {\n  spotify: string;\n}\n\nexport interface Album {\n  album_type: string;\n  artists?: ArtistsEntity[] | null;\n  available_markets?: string[] | null;\n  external_urls: ExternalUrls;\n  href: string;\n  id: string;\n  images?: ImagesEntity[] | null;\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistsEntity {\n  external_urls: ExternalUrls;\n  followers?: Followers;\n  genres?: string[] | null;\n  href: string;\n  id: string;\n  images?: ImagesEntity[] | null;\n  name: string;\n  popularity?: number;\n  type: string;\n  uri: string;\n}\n\nexport interface ImagesEntity {\n  height: number;\n  url: string;\n  width: number;\n}\nexport interface ExternalIds {\n  isrc: string;\n}\nexport interface Actions {\n  disallows: Disallows;\n}\nexport interface Disallows {\n  resuming: boolean;\n}\n\n// Likes\nexport interface LikesResponse {\n  href: string;\n  items?: TracksEntity[] | null;\n  limit: number;\n  next: string;\n  offset: number;\n  previous?: null;\n  total: number;\n  error?: SpotifyError;\n}\nexport interface TracksEntity {\n  added_at: string;\n  track: Track;\n}\nexport interface Track {\n  album: Album;\n  artists?: ArtistsEntity[] | null;\n  available_markets?: string[] | null;\n  disc_number: number;\n  duration_ms: number;\n  explicit: boolean;\n  external_ids: ExternalIds;\n  external_urls: ExternalUrls;\n  href: string;\n  id: string;\n  is_local: boolean;\n  name: string;\n  popularity: number;\n  preview_url: string;\n  track_number: number;\n  type: string;\n  uri: string;\n}\n\n// Top\nexport enum SpotifyTimeRange {\n  ShortTerm = 'short_term', // 4 weeks\n  MediumTerm = 'medium_term', // 6 months\n  LongTerm = 'long_term', // Several years of data\n}\n\nexport enum SpotifyTopType {\n  Artists = 'artists',\n  Tracks = 'tracks',\n}\n\nexport interface TopResponse {\n  items?: ArtistsEntity[] | Track[];\n  total: number;\n  limit: number;\n  offset: number;\n  href: string;\n  previous?: null;\n  next: string;\n  error?: SpotifyError;\n}\n\nexport interface Followers {\n  href?: null;\n  total: number;\n}\n\n// Errors\nexport interface SpotifyError {\n  status: number;\n  message: string;\n}\n\nexport enum SpotifyErrorMessages {\n  TokenExpired = 'The access token expired',\n}\n\nexport interface SpotifyUserProfile {\n  name: string;\n  externalUrl: string;\n  imageUrl: string;\n  email: string;\n  country: string;\n  error: string;\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport defaultProfileImage from '../../assets/badminton.png';\n\nimport { SharedLayout } from '../shared-layout';\nimport { Section, Profile } from '../../components';\nimport { SpotifyService, SpotifyUserProfile } from '../../services';\nimport { Button } from '../../components/shared/button.component';\nimport { StorageService, StorageKeys } from '../../services/storage';\n\ninterface AccountProps extends RouteComponentProps<any> {}\ninterface AccountState {\n  hasError: boolean;\n  userProfile: any;\n}\n\nexport class Account extends React.Component<AccountProps, AccountState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      userProfile: {} as SpotifyUserProfile,\n    };\n  }\n\n  componentDidMount() {\n    this.setUserProfile(() => {\n      this.setState({ hasError: true });\n    });\n  }\n\n  async setUserProfile(onError: Function) {\n    const userProfile = await SpotifyService.userProfile();\n    const { error } = userProfile;\n\n    if (error) {\n      return onError(error);\n    }\n\n    this.setState({ userProfile });\n  }\n\n  logout() {\n    Object.keys(StorageKeys).forEach((key) => StorageService.remove((StorageKeys as any)[key]));\n    SpotifyService.logout();\n    this.props.history.push('/');\n    window.location.reload();\n  }\n\n  render() {\n    const { hasError, userProfile } = this.state;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={false}>\n        <Section headerText={`Account information`}>\n          <Profile\n            style={styles.profile}\n            imageStyle={styles.image}\n            imageUrl={userProfile.imageUrl || defaultProfileImage}\n            externalUrl={userProfile.externalUrl}\n            info={{\n              name: userProfile.name,\n              email: userProfile.email,\n              country: userProfile.country,\n              followers: userProfile.followers,\n            }}\n          ></Profile>\n        </Section>\n        <Section>\n          <Button\n            text={'Logout'}\n            onClick={() => {\n              this.logout();\n            }}\n          />\n        </Section>\n      </SharedLayout>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  profile: {\n    width: 500,\n  },\n  image: {\n    width: 80,\n    height: 'auto',\n  },\n};\n","import React from 'react';\n\nimport { SharedLayout } from '../shared-layout';\nimport { Section, Profile, Button } from '../../components';\nimport { TopResponse, SpotifyService, SpotifyTopType, ArtistsEntity, SpotifyTimeRange, Track } from '../../services';\nimport { Spacing } from '../../styles';\n\ninterface StatsProps {}\ninterface StatsState {\n  hasError: boolean;\n  topArtistsTimeRange: SpotifyTimeRange;\n  topTracksTimeRange: SpotifyTimeRange;\n  topArtists?: any;\n  topTracks?: any;\n  isLoading: boolean;\n}\n\nexport class Stats extends React.Component<StatsProps, StatsState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      topArtistsTimeRange: SpotifyTimeRange.ShortTerm,\n      topTracksTimeRange: SpotifyTimeRange.ShortTerm,\n      hasError: false,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setTopsState(() => this.setState({ hasError: true }));\n  }\n\n  async setTopsState(onError: Function) {\n    const { topArtistsTimeRange, topTracksTimeRange } = this.state;\n    const topArtists: TopResponse = await SpotifyService.getTop(SpotifyTopType.Artists, topArtistsTimeRange);\n    const topTracks: TopResponse = await SpotifyService.getTop(SpotifyTopType.Tracks, topTracksTimeRange);\n\n    const { error: topArtistsError } = topArtists;\n    const { error: topTracksError } = topTracks;\n\n    if (topArtistsError || topTracksError) {\n      return onError(topArtistsError, topTracksError);\n    }\n\n    this.setState({ topArtists, topTracks, isLoading: false });\n  }\n\n  renderTimeRangeButtons(type: SpotifyTopType) {\n    const SpotifyTimeRangeToDisplay = {\n      [SpotifyTimeRange.ShortTerm]: 'Last 4 weeks',\n      [SpotifyTimeRange.MediumTerm]: 'Last 6 months',\n      [SpotifyTimeRange.LongTerm]: 'Last several years',\n    };\n    const SpotifyTimeRangeList = [SpotifyTimeRange.ShortTerm, SpotifyTimeRange.MediumTerm, SpotifyTimeRange.LongTerm];\n    const timeRangeForType = type === SpotifyTopType.Artists ? 'topArtistsTimeRange' : 'topTracksTimeRange';\n\n    return (\n      <div style={styles.row}>\n        {SpotifyTimeRangeList.map((range, index) => {\n          return (\n            <div key={index} style={styles.toggle}>\n              <Button\n                text={SpotifyTimeRangeToDisplay[range]}\n                onClick={() => {\n                  // Using never as a workaround when calling setState with dynamic keys\n                  this.setState<never>({ [timeRangeForType]: range }, () =>\n                    this.setTopsState(() => this.setState({ hasError: true }))\n                  );\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { hasError, topArtists, topTracks, isLoading, topArtistsTimeRange, topTracksTimeRange } = this.state;\n    const SpotifyTimeRangeToDisplay = {\n      [SpotifyTimeRange.ShortTerm]: 'Last 4 weeks',\n      [SpotifyTimeRange.MediumTerm]: 'Last 6 months',\n      [SpotifyTimeRange.LongTerm]: 'Last several years',\n    };\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={isLoading}>\n        <div>\n          <Section headerText={`Top artists (${SpotifyTimeRangeToDisplay[topArtistsTimeRange]})`}>\n            {this.renderTimeRangeButtons(SpotifyTopType.Artists)}\n            <div style={styles.row}>\n              {topArtists &&\n                topArtists!.items!.map((artist: ArtistsEntity, index: number) => {\n                  return (\n                    <Profile\n                      key={index}\n                      style={styles.profile}\n                      imageStyle={styles.image}\n                      imageUrl={artist.images![0].url}\n                      externalUrl={artist.external_urls.spotify}\n                      displayKeys={false}\n                      info={{\n                        rank: `${index + 1}`,\n                        name: artist.name,\n                        genres: artist.genres!.join(', '),\n                      }}\n                    ></Profile>\n                  );\n                })}\n            </div>\n          </Section>\n        </div>\n        <div>\n          <Section headerText={`Top tracks (${SpotifyTimeRangeToDisplay[topTracksTimeRange]})`}>\n            {this.renderTimeRangeButtons(SpotifyTopType.Tracks)}\n            <div style={styles.row}>\n              {topTracks &&\n                topTracks!.items!.map((track: Track, index: number) => {\n                  return (\n                    <Profile\n                      key={index}\n                      style={styles.profile}\n                      imageStyle={styles.image}\n                      imageUrl={track.album!.images![0].url}\n                      externalUrl={track.external_urls.spotify}\n                      displayKeys={false}\n                      info={{\n                        rank: `${index + 1}`,\n                        title: track.name,\n                        artist: track.artists![0].name,\n                      }}\n                    ></Profile>\n                  );\n                })}\n            </div>\n          </Section>\n        </div>\n      </SharedLayout>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  row: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  profile: {\n    width: 500,\n    marginBottom: Spacing.s12,\n    marginRight: Spacing.s48,\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  toggle: {\n    marginBottom: Spacing.s16,\n    marginRight: Spacing.s16,\n  },\n};\n","import { Home, Stream, Account, Stats } from '../pages';\n\n/**\n * @prop path - required\n * @prop page - required\n * @prop header - optional, value to display on header nav\n * @prop rightAlignedHeader - optional, if the header is right aligned\n */\nexport interface AppRoute {\n  path: string;\n  page: any;\n  header?: string;\n  rightAlignedHeader?: boolean;\n}\n\nexport const AppRoutes: AppRoute[] = [\n  // Header routes\n  {\n    path: '/',\n    page: Home,\n    header: 'shareable',\n  },\n  {\n    path: '/stream',\n    page: Stream,\n    header: 'stream',\n  },\n  {\n    path: '/account',\n    page: Account,\n    header: 'account',\n    rightAlignedHeader: true,\n  },\n  {\n    path: '/stats',\n    page: Stats,\n    header: 'stats',\n  },\n  // Other routes\n];\n","export const scopes = [\n  'user-top-read',\n  'user-read-currently-playing',\n  'user-read-playback-state',\n  'user-library-read',\n  'streaming',\n  'user-read-email',\n  'user-read-private',\n  'user-library-modify',\n];\n\nconst dev = {\n  redirectUri: 'http://localhost:3000/',\n};\n\nconst prod = {\n  redirectUri: 'https://thmsngyn.github.io/shareable/',\n};\n\nconst config = process.env.REACT_APP_STAGE === 'prod' ? prod : dev;\n\nexport default {\n  // Common configs\n  clientId: '05b0a9e4fb784b1c866f6235ae139c3a',\n  scopes,\n\n  // Dev configs\n  ...config,\n};\n","import config from '../../config';\n\n// APIs\nexport const SPOTIFY_API_HOSTNAME = 'https://api.spotify.com';\nexport const PLAYER_API = `${SPOTIFY_API_HOSTNAME}/v1/me/player`;\nexport const SAVED_TRACKS_API = `${SPOTIFY_API_HOSTNAME}/v1/me/tracks`;\nexport const USER_PROFILE_API = `${SPOTIFY_API_HOSTNAME}/v1/me`;\nexport const USER_TOP_API = `${SPOTIFY_API_HOSTNAME}/v1/me/top`;\n\n// Auth\nexport const AUTH_API = 'https://accounts.spotify.com/authorize';\nexport const LOGIN_OAUTH = `${AUTH_API}?client_id=${config.clientId}&redirect_uri=${\n  config.redirectUri\n}&scope=${config.scopes.join('%20')}&response_type=token&show_dialog=true`;\n","import { hash, parseJson } from '../../utils';\nimport { StorageService, StorageKeys } from '../storage';\n\nimport { PLAYER_API, SAVED_TRACKS_API, USER_PROFILE_API, USER_TOP_API } from './spotify.constants';\nimport {\n  CurrentPlaybackResponse,\n  LikesResponse,\n  SpotifyErrorMessages,\n  SpotifyUserProfile,\n  SpotifyTimeRange,\n  SpotifyTopType,\n} from './spotify.types';\n\nexport const SpotifyService = new (class {\n  private token: string = '';\n  constructor() {}\n\n  private get headers() {\n    return new Headers({\n      Authorization: 'Bearer ' + this.token,\n    });\n  }\n\n  private resolveTokenInStorage(hasTokenInStorage: boolean, token: string) {\n    if (!hasTokenInStorage) {\n      StorageService.set(StorageKeys.SpotifyToken, token);\n      StorageService.setExpiration(StorageKeys.SpotifyToken, 36000000); // 1 hr\n    } else {\n      StorageService.checkExpiration();\n    }\n  }\n\n  logout() {\n    this.token = '';\n  }\n\n  async userProfile(): Promise<SpotifyUserProfile> {\n    const profileFromStorage = StorageService.get(StorageKeys.UserProfile);\n\n    if (!profileFromStorage) {\n      const response = await this.getUserProfile();\n      const { display_name: name, external_urls, images, email, country, followers, error } = response;\n      const imageUrl = images && images.length && images[0].url;\n      const externalUrl = external_urls && external_urls.spotify;\n\n      const userProfile = {\n        name,\n        externalUrl,\n        email,\n        country,\n        imageUrl,\n        followers: followers && followers.total,\n        error,\n      };\n      StorageService.set(StorageKeys.UserProfile, JSON.stringify(userProfile));\n      return userProfile;\n    } else {\n      return JSON.parse(profileFromStorage);\n    }\n  }\n\n  userIsLoggedIn(): boolean {\n    return !!this.token;\n  }\n\n  resolveUserToken(): string {\n    // Set token\n    this.token = hash.access_token;\n    const tokenFromStorage = StorageService.get(StorageKeys.SpotifyToken);\n\n    if (!!tokenFromStorage || !!this.token) {\n      this.token = tokenFromStorage || this.token;\n      this.resolveTokenInStorage(!!tokenFromStorage, this.token);\n      return this.token;\n    }\n    return '';\n  }\n\n  getUserProfile(): Promise<any> {\n    return this.request(USER_PROFILE_API, 'GET');\n  }\n\n  getCurrentlyPlaying(): Promise<CurrentPlaybackResponse> {\n    // Make a call using the token\n    return this.request(PLAYER_API, 'GET');\n  }\n\n  getLikes(limit: number = 10, offset: number = 0): Promise<LikesResponse> {\n    return this.request(`${SAVED_TRACKS_API}?limit=${limit}&offset=${offset}`, 'GET');\n  }\n\n  getTop(\n    type: SpotifyTopType,\n    timeRange: SpotifyTimeRange = SpotifyTimeRange.ShortTerm,\n    limit: number = 10,\n    offset: number = 0\n  ): Promise<any> {\n    return this.request(`${USER_TOP_API}/${type}?limit=${limit}&offset=${offset}&time_range=${timeRange}`, 'GET');\n  }\n\n  request(url: string, method: string): Promise<any> {\n    return fetch(url, {\n      method: method,\n      headers: this.headers,\n    })\n      .then(parseJson)\n      .then(this.errorHandler.bind(this));\n  }\n\n  errorHandler(response: any) {\n    const { error } = response;\n    if (error) {\n      switch (error.message) {\n        case SpotifyErrorMessages.TokenExpired:\n          StorageService.remove(StorageKeys.SpotifyToken);\n      }\n    }\n    return response;\n  }\n})();\n","import React from 'react';\n\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { IProps, IStylesProps } from 'react-spotify-web-playback/lib/types/common';\n\nimport { SpotifyService } from '../../services';\nimport { Colors } from '../../styles';\n\ntype ReducedSpotifyPlayerProps = Pick<IProps, Exclude<keyof IProps, 'token'>>;\ninterface PlayerProps extends ReducedSpotifyPlayerProps {}\ninterface PlayerState {\n  token: string;\n}\nexport class Player extends React.Component<PlayerProps, PlayerState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      token: '',\n    };\n  }\n\n  componentDidMount() {\n    const token = SpotifyService.resolveUserToken();\n    if (token) {\n      this.setState({ token });\n    }\n  }\n\n  render() {\n    return <SpotifyPlayer styles={styles.custom} token={this.state.token} autoPlay={true} showSaveIcon={true} />;\n  }\n}\n\nconst styles: Record<string, React.CSSProperties & IStylesProps> = {\n  custom: {\n    sliderColor: Colors.ShareableLavender,\n    savedColor: Colors.ShareableLavender,\n  },\n};\n","import React, { Fragment } from 'react';\n\nimport { Player } from '../player';\n\nexport class Footer extends React.Component {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div style={styles.footer}>\n        <Player />\n      </div>\n    );\n  }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n  },\n};\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport logo from '../../assets/gradient-logo.png';\nimport { FontSizes, Colors, APP_HEADER_HEIGHT, getAppMargin } from '../../styles';\nimport { AppRoutes, AppRoute } from '../../utils';\n\ninterface HeaderProps {\n  isMobile: boolean;\n}\ninterface HeaderState {}\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  renderHeaderItem(isRightAligned: boolean = false) {\n    const keepRightHeaders = (route: AppRoute) => {\n      return !route.header || (route.header && route.rightAlignedHeader === true);\n    };\n    const keepLeftHeaders = (route: AppRoute) => {\n      return !route.header || (route.header && !route.rightAlignedHeader);\n    };\n\n    return AppRoutes.filter((route) => (isRightAligned ? keepRightHeaders(route) : keepLeftHeaders(route))).map(\n      (route) => {\n        return (\n          <NavLink\n            key={route.path}\n            exact\n            to={route.path}\n            style={styles.headerItem}\n            activeStyle={styles.headerItemActive}\n          >\n            {route.header}\n          </NavLink>\n        );\n      }\n    );\n  }\n\n  get responsiveHeaderStyle() {\n    const { isMobile } = this.props;\n    let responsiveHeaderStyle = {\n      ...styles.headerContents,\n      paddingLeft: getAppMargin(isMobile),\n      paddingRight: getAppMargin(isMobile),\n    };\n    if (isMobile) {\n      responsiveHeaderStyle = {\n        ...responsiveHeaderStyle,\n        fontSize: (responsiveHeaderStyle.fontSize as number) - 6,\n      };\n    }\n\n    return responsiveHeaderStyle;\n  }\n\n  get responsiveLeftHeaderStyle() {\n    const { isMobile } = this.props;\n    return { ...styles.headerLeft, width: isMobile ? 250 : 300 };\n  }\n\n  render() {\n    return (\n      <div style={styles.header}>\n        <div style={this.responsiveHeaderStyle}>\n          <div style={this.responsiveLeftHeaderStyle}>\n            <NavLink exact to={'/'} style={styles.headerItem} activeStyle={styles.headerItemActive}>\n              <img style={styles.logo} src={logo} alt=\"logo\" />\n            </NavLink>\n            {this.renderHeaderItem()}\n          </div>\n          <div style={styles.headerRight}>{this.renderHeaderItem(true)}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  header: {\n    width: '100%',\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    backgroundColor: Colors.White,\n    color: Colors.ScreenBackground,\n    height: APP_HEADER_HEIGHT,\n  },\n  headerContents: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '100%',\n    ...FontSizes.Medium,\n  },\n  logo: {\n    width: 35,\n    height: 35,\n  },\n  headerLeft: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: 300,\n  },\n  headerRight: {\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n  headerItem: {\n    display: 'flex',\n    cursor: 'pointer',\n    textDecoration: 'none',\n    color: Colors.ScreenBackground,\n  },\n  headerItemActive: {\n    fontFamily: 'CentraNo2-Medium',\n  },\n};\n","import React from 'react';\nimport { Spacing, FontSizes } from '../../styles';\n\ninterface SectionProps {\n  headerText?: string;\n  subText?: string;\n}\n\nexport class Section extends React.Component<SectionProps> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { headerText, subText, children } = this.props;\n    return (\n      <div style={styles.streamSection}>\n        {headerText && <div style={styles.headerText}>{headerText}</div>}\n        {subText && <div style={styles.subText}>{subText}</div>}\n        {children}\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  streamSection: {\n    marginTop: Spacing.s32,\n  },\n  headerText: {\n    marginBottom: Spacing.s16,\n    fontFamily: 'CentraNo2-Medium',\n    ...FontSizes.Medium,\n  },\n  subText: {\n    marginBottom: Spacing.s16,\n    fontFamily: 'CentraNo2-Book',\n  },\n};\n","import React, { CSSProperties } from 'react';\nimport { Spacing } from '../../styles';\n\ninterface ProfileProps {\n  imageUrl: string;\n  externalUrl: string;\n  info: Record<string, string>;\n  style?: CSSProperties;\n  imageStyle?: CSSProperties;\n  displayKeys?: boolean;\n}\n\nexport class Profile extends React.Component<ProfileProps> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { imageUrl, externalUrl, info, style, imageStyle, displayKeys = true } = this.props;\n    const styleOverride = {\n      ...styles.profileContainer,\n      ...style,\n    };\n    const imageStyleOverride = {\n      ...styles.image,\n      ...imageStyle,\n    };\n\n    return (\n      <div style={styleOverride}>\n        <div>\n          <img\n            className=\"art\"\n            style={imageStyleOverride}\n            src={imageUrl}\n            onClick={() => window.open(externalUrl, '_blank')}\n          />\n        </div>\n        {displayKeys && (\n          <div style={styles.infoKeys}>\n            {Object.keys(info).map((key) => {\n              return <div key={key}>{key}</div>;\n            })}\n          </div>\n        )}\n        <div style={styles.infoValues}>\n          {Object.keys(info).map((key) => {\n            return <div key={key}>{info[key]}</div>;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  profileContainer: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  image: {\n    marginRight: Spacing.s16,\n  },\n  infoKeys: {\n    textAlign: 'right',\n    marginRight: Spacing.s12,\n  },\n  infoValues: {\n    fontFamily: 'CentraNo2-Medium',\n  },\n};\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport withSizes from 'react-sizes';\n\nimport { hot } from 'react-hot-loader/root';\n\nimport { Colors, APP_FOOTER_HEIGHT, APP_HEADER_HEIGHT, getAppMargin } from './styles';\nimport { Footer, Header } from './components';\nimport { Home } from './pages';\nimport { SpotifyService } from './services';\nimport { AppRoutes } from './utils';\n\nimport './App.css';\n\ninterface AppProps {\n  isMobile: boolean;\n}\n\ninterface AppState {\n  loggedIn: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  async componentDidMount() {\n    const token = SpotifyService.resolveUserToken();\n    this.setState({ loggedIn: !!token });\n  }\n\n  renderRoutes() {\n    const { loggedIn } = this.state;\n    const { isMobile } = this.props;\n\n    let responsiveStyle = {\n      ...styles.routeContainer,\n      marginLeft: getAppMargin(isMobile),\n      marginRight: getAppMargin(isMobile),\n    };\n\n    return (\n      <div style={responsiveStyle}>\n        {!loggedIn && <Home />}\n        {loggedIn && (\n          <Switch>\n            {AppRoutes.map((route) => {\n              const { path, page } = route;\n              return <Route key={route.path} exact path={path} component={page} />;\n            })}\n          </Switch>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loggedIn } = this.state;\n    const { isMobile } = this.props;\n\n    return (\n      <Router basename=\"/shareable/\">\n        <div style={styles.app}>\n          <Header isMobile={isMobile} />\n          {this.renderRoutes()}\n          {loggedIn && <Footer />}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }: any) => ({\n  isMobile: width < 500,\n});\n\nexport default hot(withSizes(mapSizesToProps)(App));\n\nconst styles: Record<string, React.CSSProperties> = {\n  app: {\n    backgroundColor: Colors.ScreenBackground,\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    color: Colors.c100,\n    fontFamily: 'CentraNo2-Book',\n    // boxShadow: `inset ${Spacing.s224}px 0 ${Spacing.s224}px -${Spacing.s224}px ${Colors.ShareableLavender}, inset -${Spacing.s224}px 0 ${Spacing.s224}px -${Spacing.s224}px ${Colors.ShareableLavender}`,\n  },\n  routeContainer: {\n    paddingTop: APP_HEADER_HEIGHT,\n    paddingBottom: APP_FOOTER_HEIGHT,\n    overflow: 'scroll',\n  },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}