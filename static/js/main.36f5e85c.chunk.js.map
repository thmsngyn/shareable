{"version":3,"sources":["styles/shared-spacing.tsx","styles/shared-colors.tsx","styles/shared-text.tsx","utils/utils.tsx","utils/http.utils.tsx","pages/shared-layout/shared-layout.page.tsx","services/shareable/shareable.constants.tsx","services/shareable/shareable.types.tsx","pages/shared-layout/share-layout.constants.ts","config.ts","services/storage/storage.constants.tsx","services/storage/storage.service.tsx","components/shared/button.component.tsx","services/shareable/shareable.service.tsx","pages/stream/stream.page.tsx","pages/home/home.page.tsx","components/shared/section.component.tsx","components/shared/scroll-to-top.component.tsx","services/spotify/spotify.types.tsx","components/shared/dropdown.component.tsx","pages/account/account.page.tsx","pages/stats/stats.page.constants.tsx","redux/actions/actions.tsx","pages/stats/stats.page.tsx","utils/routing.tsx","services/spotify/spotify.constants.tsx","services/spotify/spotify.service.tsx","components/profile/profile.component.tsx","components/track/track.component.tsx","components/repost/repost.component.tsx","components/player/player.component.tsx","components/footer/footer.component.tsx","components/header/header.component.tsx","redux/reducers/focused-track.reducer.tsx","redux/reducers/account.reducer.tsx","redux/reducers/index.tsx","redux/store.tsx","App.tsx","utils/media-queries.tsx","serviceWorker.js","index.js","assets/share-filled-white.svg","assets/bg.jpg","assets/default-profile.svg","assets/people.jpg","assets/person.jpg","assets/badminton.png","assets/pineapple.svg","assets/dinosaur.svg","assets/share-white.svg","assets/logo-white.svg"],"names":["Spacing","Colors","APP_HEADER_HEIGHT","s48","APP_FOOTER_HEIGHT","s512","FontSizes","fontSize","lineHeight","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","parseJson","response","text","then","JSON","parse","ShareableErrorCodes","StreamTypes","SharedLayout","this","props","children","hasError","isLoading","headerText","subText","style","styles","animation","src","background","speed","width","height","loop","autoplay","React","Component","display","justifyContent","HasError","envConfig","process","redirectUri","shareableServiceHostname","REACT_APP_SHAREABLE_SERVICE_HOSTNAME","obfuscateDevTools","clientId","scopes","SHAREABLE_SERVICE_API_HOSTNAME","config","LOGIN_API","REGISTER_API","GET_STREAM_API","ADD_SHARE_API","StorageKeys","ButtonTypes","StorageService","storage","localStorage","key","getItem","error","data","setItem","console","log","duration","expirationsValue","get","KeyDecay","expirations","Date","now","set","stringify","Object","entries","forEach","val","Number","remove","removeItem","ShareableService","account","request","saveAccountId","bind","share","accountId","type","Followers","accountIdFromStorage","ShareableAccountId","url","method","body","fetch","headers","saveAuthHeader","errorHandler","shareableJwt","ShareableJwt","_id","SpotifyService","resolveUserToken","Headers","Authorization","spotifyToken","Button","classes","materialProps","buttonType","className","root","secondaryClass","label","Primary","Secondary","secondary","withStyles","theme","createStyles","fontFamily","fontWeight","color","White","ShareableLavender","padding","borderRadius","letterSpacing","breakpoints","down","margin","s8","backgroundColor","ShareableLightLavender","DisabledText","DisabledBackground","border","borderWidth","borderColor","textTransform","Stream","state","is_playing","progress_ms","shares","copyButtonText","setState","setSharesState","onError","getShares","sharesResponse","code","streamSubtext","length","map","index","metadata","track","onClick","navigator","clipboard","writeText","displayName","setTimeout","connect","store","undefined","Home","loggedIn","name","likes","clearLatestShares","userIsLoggedIn","Promise","all","userProfile","setCurrentlyPlayingState","setLikesState","a","resolveUser","finally","getCurrentlyPlaying","currentlyPlaying","getLikes","items","setUser","spotifyUserId","id","imageUrl","externalUrl","shareableAccount","login","loginResponse","errorCode","AccountNotFound","register","registerResponse","Self","focusedTrack","latestShares","responsiveHeroStyle","responsiveCtaStyle","headline","welcome","href","LOGIN_OAUTH","marginBottom","s16","shareButton","subduedHeader","like","responsiveStyles","isWidthDown","backgroundImage","mobileHero","marginTop","s64","backgroundSize","desktopHero","homeHero","centered","zIndex","backgroundRepeat","position","WebkitMaskImage","flexDirection","alignItems","textAlign","s2","dispatch","user","withWidth","Section","styleOverride","streamSection","s32","withRouter","SpotifyTimeRange","SpotifyTopType","SpotifyErrorMessages","history","useEffect","unlisten","listen","scrollTo","Dropdown","createMuiTheme","overrides","MuiInput","MuiSelect","paddingLeft","s24","paddingRight","icon","marginRight","select","MuiList","ScreenBackground","MuiMenuItem","c600","c500","Account","setUserProfile","keys","logout","push","reload","imageClassName","image","defaultProfileImage","onClickImage","open","info","followers","displayKeys","ActionTypes","SpotifyTimeRangeToDisplay","ShortTerm","MediumTerm","LongTerm","SpotifyTimeRangeList","Stats","maxTopPageOffset","topLimit","topArtistsTimeRange","topTracksTimeRange","topArtists","topTracks","topArtistsPage","topTracksPage","topArtistsTotal","topTracksTotal","setTopsState","getTop","Artists","topArtistsResponse","Tracks","topTracksResponse","topArtistsError","total","topTracksError","event","range","target","value","timeRangeForType","pageForType","scrollTopTypeStart","row","timeToggle","onChange","handleSelect","MenuItem","topType","topElement","document","getElementById","scrollLeft","increment","pageState","previousState","previousPage","nextPage","currentPage","topTotal","pageToggle","disabled","incrementPage","hasNextPage","c300","Math","floor","mobileStyles","profile","entity","defaultImage","images","renderTimeRangeButtons","responsiveRowStyle","artist","responsiveProfileStyles","imageStyle","getImageUrl","dinosaur","external_urls","spotify","rank","genres","slice","join","renderPageChange","album","pineapple","playSong","title","artists","circular","overflowX","isWidthUp","flexWrap","scrollBehavior","s12","maxWidth","AppRoutes","path","page","header","rightAlignedHeader","PLAYER_API","SAVED_TRACKS_API","USER_PROFILE_API","USER_TOP_API","PLAYER_PLAY_API","GET_TRACKS_API","token","hasTokenInStorage","checkExpiration","SpotifyToken","setExpiration","profileFromStorage","UserProfile","getUserProfile","display_name","email","country","uri","access_token","tokenFromStorage","resolveTokenInStorage","deviceIds","play","device_ids","limit","offset","timeRange","uris","ids","idsParam","encodeURIComponent","resolve","message","TokenExpired","setFocused","action","SET_FOCUSED","SET_USER","CLEAR_LATEST_SHARES","playSongs","shareSong","getState","trackId","addShare","EntityAlreadyExists","SET_SHARED","Profile","imageDimensions","img","offsetHeight","offsetWidth","profileContainer","imageContainerStyleOverride","imageContainer","imageStyleOverride","landscapeImgStyle","portraitImgStyle","onLoad","onImgLoad","alt","infoContainer","infoKeys","infoValues","aspectRatio","abs","isLandscape","marginLeft","isPortrait","overflow","c400","Track","artistName","trackTitle","date","seconds","getTime","interval","timeSince","createdAt","toLocaleString","weekday","year","month","day","metadataContainer","renderTimestamp","hasData","column","renderSubduedHeader","renderMetadata","coverArt","renderArtists","renderTrackTitle","Repost","toastOpen","reason","isShared","Tooltip","multiFont","arrow","handleShare","Snackbar","ContentProps","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","cursor","shareIcon","transition","shareIconFilled","Player","deviceId","playerIsActive","isActive","transferPlayback","getTracks","tracksObj","tracks","setFocusedTrack","playerData","setDevice","syncCurrentlyPlaying","isMobile","container","repost","playerStyles","autoPlay","showSaveIcon","persistDeviceSelection","callback","handlePlayerCallback","sliderColor","savedColor","bgColor","Header","trackNameColor","trackArtistColor","sliderTrackColor","MapDispatchToProps","left","bottom","Footer","footer","isRightAligned","keepRightHeaders","route","keepLeftHeaders","filter","exact","to","headerItem","activeStyle","headerItemActive","responsiveHeaderStyle","responsiveLeftHeaderStyle","logo","renderHeaderItem","headerRight","HeaderSplashMobile","HeaderSplashDesktop","headerContents","splashBgColor","headerLeft","top","textDecoration","initialState","isPlaying","rootReducer","combineReducers","payload","PAUSE_FOCUSED","find","middleware","reduxThunk","createStore","applyMiddleware","composeWithDevTools","App","responsiveStyle","routeContainer","Page","render","app","renderRoutes","hot","withSizes","minHeight","c100","paddingTop","Boolean","hostname","match","ReactDOM","Fragment","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.36f5e85c.chunk.js","sourcesContent":["export enum Spacing {\n  s0 = 0,\n  s2 = 2,\n  s4 = 4,\n  s8 = 8,\n  s12 = 12,\n  s16 = 16,\n  s24 = 24,\n  s32 = 32,\n  s48 = 48,\n  s64 = 64,\n  s128 = 128,\n  s224 = 224,\n  s512 = 512,\n}\n\nexport const APP_HEADER_HEIGHT = Spacing.s48;\nexport const APP_FOOTER_HEIGHT = Spacing.s512;\n","export enum Colors {\n  // brand colors\n  ShareableLavender = '#6767d7',\n  ShareableLightLavender = '#7b7bf9',\n  // blacks/greys/white\n  c600 = '#1C2124', // body text\n  c500 = '#66747D', // subdued text\n  c400 = '#86939C', // Icon default\n  c300 = '#C7D0D6', // input outline\n  c200 = '#E4E9ED', // card outline\n  c100 = '#F5F8FA', // background and disabled\n  c0 = '#FFF', // white\n  // TODO: add more colors\n  // Helper Colors\n  ScreenBackground = '#282c34',\n  White = '#fff',\n  Black = '#000',\n  Transparent = 'rgba(52, 52, 52, 0)',\n  TransparentDark = 'rgba(52, 52, 52, 0.9)',\n  DisabledText = '#ababab',\n  DisabledBackground = '#ffffff30',\n  Header = '#273344',\n  HeaderSplashMobile = '#1d1f1e',\n  HeaderSplashDesktop = '#2F3B4B',\n}\n","export const FontSizes = {\n  ExtraLarge: {\n    fontSize: 48,\n    lineHeight: '54px',\n  },\n  Large: {\n    fontSize: 36,\n    lineHeight: '54px',\n  },\n  MediumLarge: {\n    fontSize: 28,\n    lineHeight: '36px',\n  },\n  Medium: {\n    fontSize: 20,\n    lineHeight: '30px',\n  },\n  MediumSmall: {\n    fontSize: 14,\n    lineHeight: '20px',\n  },\n  Small: {\n    fontSize: 12,\n    lineHeight: '18px',\n  },\n  ExtraSmall: {\n    fontSize: 11,\n    lineHeight: '16px',\n  },\n};\n","// Get the hash of the url\nexport const hash: any = window.location.hash\n  .substring(1)\n  .split('&')\n  .reduce(function (initial: any, item: string) {\n    if (item) {\n      const parts = item.split('=');\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = '';\n\nexport function timeSince(date: number) {\n  var seconds = Math.floor(new Date(Date.now() - date).getTime() / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval >= 1) {\n    return interval + ` year${interval > 1 ? 's' : ''} ago`;\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval >= 1) {\n    return interval + ` month${interval > 1 ? 's' : ''} ago`;\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval >= 1) {\n    return interval + ` day${interval > 1 ? 's' : ''} ago`;\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval >= 1) {\n    return interval + ` hour${interval > 1 ? 's' : ''} ago`;\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval >= 1) {\n    return interval + ` minute${interval > 1 ? 's' : ''} ago`;\n  }\n  return Math.floor(seconds) + ` second${interval > 1 ? 's' : ''} ago`;\n}\n","export function parseJson(response: any) {\n  return response.text().then(function (text: any) {\n    return text ? JSON.parse(text) : {};\n  });\n}\n","import React from 'react';\n\nimport { Section } from '../../components';\n\n// TODO: Move somewhere else?\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'lottie-player': any;\n    }\n  }\n}\n\nexport interface SharedLayoutProps {\n  hasError: boolean;\n  isLoading: boolean;\n}\nexport interface SharedLayoutState {}\n\n/**\n * Responsible for shared page layout and states\n */\nexport class SharedLayout extends React.Component<SharedLayoutProps, SharedLayoutState> {\n  componentDidMount() {}\n\n  render() {\n    const { children, hasError, isLoading } = this.props;\n\n    if (hasError) {\n      return (\n        <Section headerText={'Something bad happened...'} subText={'Please refresh the page and try again.'}>\n          <div style={styles.animation}>\n            <lottie-player\n              src=\"https://assets3.lottiefiles.com/packages/lf20_3x5I70.json\"\n              background=\"transparent\"\n              speed=\"1\"\n              style={{ width: 350, height: 'auto' }}\n              loop\n              autoplay\n            ></lottie-player>\n          </div>\n        </Section>\n      );\n    }\n    if (isLoading) {\n      return (\n        <Section>\n          <div style={styles.animation}>\n            <lottie-player\n              src=\"https://assets8.lottiefiles.com/packages/lf20_6R2HIH.json\"\n              background=\"transparent\"\n              speed=\"2\"\n              style={{ width: 350, height: 350 }}\n              loop\n              autoplay\n            ></lottie-player>\n          </div>\n        </Section>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  animation: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n};\n","import config from '../../config';\n\n// APIs\nexport const SHAREABLE_SERVICE_API_HOSTNAME = config.shareableServiceHostname;\nexport const LOGIN_API = `${SHAREABLE_SERVICE_API_HOSTNAME}/accounts/login`;\nexport const REGISTER_API = `${SHAREABLE_SERVICE_API_HOSTNAME}/accounts`;\nexport const GET_STREAM_API = `${SHAREABLE_SERVICE_API_HOSTNAME}/stream`;\nexport const ADD_SHARE_API = `${SHAREABLE_SERVICE_API_HOSTNAME}/stream/share`;\nexport const REMOVE_SHARE_API = `${SHAREABLE_SERVICE_API_HOSTNAME}/stream/share`;\n\nexport enum ShareableErrorCodes {\n  AccountNotFound = 1000,\n  EntityAlreadyExists = 1001,\n  InvalidAccessSpotifyAccessToken = 1002,\n  SpotifyAccessTokenExpired = 1003,\n}\n","import { Track } from '../spotify';\nexport interface ErrorResponse {\n  code: any;\n}\n\nexport interface ShareableAccount {\n  spotifyUserId: string;\n  displayName?: string;\n  _id?: string;\n  email?: string;\n  loggedIn?: boolean;\n  followers?: ShareableAccount[];\n  code?: any;\n  imageUrl?: string;\n  externalUrl?: string;\n}\n\nexport interface StreamShare {\n  accountId: string;\n  trackId: string;\n  code?: any;\n}\n\nexport interface SharedTrackMetadata extends StreamShare {\n  createdAt: string;\n  updatedAt: string;\n  code?: any;\n}\n\nexport interface SharedTrack {\n  track: Track;\n  account?: ShareableAccount;\n  metadata?: SharedTrackMetadata;\n  code?: any;\n}\n\nexport interface StreamShares {\n  shares: SharedTrack[];\n  code?: any;\n}\n\nexport enum StreamTypes {\n  Followers = 'followers',\n  Self = 'self',\n}\n","export const HasError = {\n  hasError: true,\n  isLoading: false,\n};\n","interface AppConfig {\n  scopes: string[];\n  clientId: string;\n  redirectUri: string;\n  obfuscateDevTools: boolean;\n  shareableServiceHostname: string;\n}\n\nconst scopes = [\n  'user-top-read',\n  'user-read-currently-playing',\n  'user-read-playback-state',\n  'user-library-read',\n  'streaming',\n  'user-read-email',\n  'user-read-private',\n  'user-library-modify',\n  'user-follow-read',\n];\n\nconst dev: Partial<AppConfig> = {\n  redirectUri: `${process.env.REACT_APP_SHAREABLE_HOSTNAME}:3000`,\n  shareableServiceHostname: `${process.env.REACT_APP_SHAREABLE_HOSTNAME}:4000`,\n  obfuscateDevTools: false,\n};\n\n// All env vars need to be prefixed with 'REACT_APP_'\nconst prod: Partial<AppConfig> = {\n  redirectUri: 'https://www.shareable.dev',\n  shareableServiceHostname: process.env.REACT_APP_SHAREABLE_SERVICE_HOSTNAME,\n  obfuscateDevTools: true,\n};\n\nconst envConfig: Partial<AppConfig> = process.env.NODE_ENV === 'production' ? prod : dev;\n\nexport default {\n  // Common configs\n  clientId: '05b0a9e4fb784b1c866f6235ae139c3a',\n  scopes,\n\n  // Environment configs\n  ...envConfig,\n} as AppConfig;\n","export enum StorageKeys {\n  SpotifyToken = 'shrbl_spotify_token',\n  UserProfile = 'shrbl_user',\n  KeyDecay = 'shrbl_key_decay',\n  ShareableJwt = 'shrbl_jwt',\n  ShareableAccountId = 'shrbl_account_id',\n}\n","import { StorageKeys } from './storage.constants';\n\n/**\n * This is a wrapper around localStorage with:\n * 1. fallback to in memory storage in case local storage is not available\n * 2. option to add expiration time to  values\n */\nexport const StorageService = new (class {\n  storage = localStorage;\n\n  /** Gets a stored value if exists\n   * returns null if not exist or in case of error .\n   * @memberof LocalStoreService\n   * @method get\n   * @param {string} key\n   * @return {string | null}\n   */\n  get(key: string): string | null {\n    try {\n      return this.storage.getItem(key);\n    } catch (error) {}\n    return null;\n  }\n\n  /** Sets data for a key in storage\n   * in case of error accessing localStorage, will change storage mode to in memory\n   * @memberof LocalStoreService\n   * @method set\n   * @param {string} key\n   * @param {string} data\n   * @return {void}\n   */\n  set(key: string, data: string): void {\n    try {\n      this.storage.setItem(key, data);\n    } catch (error) {\n      console.log(error);\n      // this.storage = new TempStorage();\n      // this.storage.setItem(key, data);\n    }\n  }\n\n  /** Sets expiration time for a key.\n   * key references a key in the local store\n   * @memberof LocalStoreService\n   * @method setExpiration\n   * @param {string} key\n   * @param {number} duration\n   * @return {void}\n   */\n  setExpiration(key: string, duration: number): void {\n    const expirationsValue: any = this.get(StorageKeys.KeyDecay);\n    const expirations: any = (expirationsValue && JSON.parse(expirationsValue)) || {};\n    expirations[key] = Date.now() + duration;\n    this.set(StorageKeys.KeyDecay, JSON.stringify(expirations));\n  }\n\n  /** Removes expired keys from local store\n   * @memberof LocalStoreService\n   * @method checkExpiration\n   * @return {void}\n   */\n  checkExpiration(): void {\n    let expirations: any;\n    if (!(expirations = JSON.parse(this.get(StorageKeys.KeyDecay) || 'null'))) {\n      return;\n    }\n    const now = Date.now();\n\n    Object.entries(expirations).forEach(([key, val]) => {\n      if (now <= Number(val)) {\n        return;\n      }\n      this.remove(key);\n      delete expirations[key];\n    });\n\n    this.set(StorageKeys.KeyDecay, JSON.stringify(expirations));\n  }\n\n  /** Removes a key from the store\n   * @memberof LocalStoreService\n   * @method removeItem\n   * @param {string} key\n   * @return {void}\n   */\n  remove(key: string): void {\n    try {\n      this.storage.removeItem(key);\n    } catch (error) {}\n  }\n})();\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Button as MaterialButton,\n  ButtonProps as MaterialButtonProps,\n  Theme,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\n\nimport { Colors, Spacing } from '../../styles';\n\ninterface OwnProps extends WithStyles<typeof styles> {\n  buttonType?: ButtonTypes;\n}\ntype ButtonProps = MaterialButtonProps & OwnProps;\n\nexport enum ButtonTypes {\n  Primary = 'primary',\n  Secondary = 'secondary',\n}\n\nclass Button extends React.Component<ButtonProps> {\n  constructor(props: ButtonProps) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  get secondaryClass() {\n    const { buttonType = ButtonTypes.Primary, classes } = this.props;\n    return buttonType === ButtonTypes.Secondary ? classes.secondary : '';\n  }\n\n  render() {\n    const { children, classes, buttonType, ...materialProps } = this.props;\n\n    return (\n      <MaterialButton {...materialProps} className={`${classes.root} ${this.secondaryClass} ${classes.label}`}>\n        {children}\n      </MaterialButton>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      fontFamily: 'Muli',\n      fontWeight: 800,\n      color: Colors.White,\n      background: Colors.ShareableLavender,\n      height: 48,\n      padding: '0 25px',\n      borderRadius: 4,\n      letterSpacing: 0.6,\n      [theme.breakpoints.down('sm')]: {\n        width: '100%',\n        margin: `${Spacing.s8}px 0px`,\n      },\n      '&:hover': {\n        backgroundColor: Colors.ShareableLightLavender,\n      },\n      '&:disabled': {\n        color: Colors.DisabledText,\n        backgroundColor: Colors.DisabledBackground,\n        border: 0,\n      },\n    },\n    secondary: {\n      background: 'transparent',\n      border: 'solid',\n      borderWidth: 1,\n      borderColor: Colors.White,\n      '&:hover': {\n        backgroundColor: Colors.ShareableLavender,\n        borderColor: Colors.ShareableLavender,\n        borderWidth: 1,\n      },\n    },\n    label: {\n      textTransform: 'none',\n    },\n  });\n\nexport default withStyles(styles)(Button);\n","import { parseJson } from '../../utils';\n\nimport { SpotifyService } from '../spotify/spotify.service';\nimport { LOGIN_API, REGISTER_API, ADD_SHARE_API, GET_STREAM_API } from './shareable.constants';\nimport { ShareableAccount, StreamTypes, StreamShares, StreamShare } from './shareable.types';\nimport { StorageService, StorageKeys } from '../storage';\n\nexport const ShareableService = new (class {\n  constructor() {}\n\n  get spotifyToken() {\n    return SpotifyService.resolveUserToken();\n  }\n\n  private get headers() {\n    return new Headers({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${StorageService.get(StorageKeys.ShareableJwt)}` || '',\n      'OAuth-Authorization': `Bearer ${this.spotifyToken}`,\n    });\n  }\n\n  login(account: ShareableAccount): Promise<ShareableAccount> {\n    return this.request(LOGIN_API, 'POST', {\n      ...account,\n    }).then(this.saveAccountId.bind(this));\n  }\n\n  register(account: ShareableAccount): Promise<ShareableAccount> {\n    return this.request(REGISTER_API, 'POST', {\n      ...account,\n    }).then(this.saveAccountId.bind(this));\n  }\n\n  addShare(share: StreamShare): Promise<StreamShare> {\n    return this.request(ADD_SHARE_API, 'POST', {\n      ...share,\n    });\n  }\n\n  getShares(accountId, type: StreamTypes = StreamTypes.Followers): Promise<StreamShares> {\n    const accountIdFromStorage = StorageService.get(StorageKeys.ShareableAccountId);\n    return this.request(`${GET_STREAM_API}/${accountId || accountIdFromStorage}?type=${type}`, 'GET');\n  }\n\n  request(url: string, method: string, body?: any): Promise<any> {\n    return fetch(url, {\n      method,\n      headers: this.headers,\n      body: JSON.stringify(body),\n    })\n      .then(this.saveAuthHeader.bind(this))\n      .then(parseJson)\n      .then(this.errorHandler.bind(this));\n  }\n\n  private saveAuthHeader(response: Response) {\n    const { headers } = response;\n    const shareableJwt = headers.get('X-Auth-Token');\n\n    if (shareableJwt) {\n      StorageService.set(StorageKeys.ShareableJwt, shareableJwt);\n    }\n    return response;\n  }\n\n  private errorHandler(response: any) {\n    const { error } = response;\n    if (error) {\n    }\n    return response;\n  }\n\n  private saveAccountId(response: ShareableAccount) {\n    const { _id: accountId = '' } = response;\n\n    if (accountId) {\n      StorageService.set(StorageKeys.ShareableAccountId, accountId);\n    }\n\n    return response;\n  }\n})();\n","import React, { Fragment } from 'react';\n\nimport * as AppStateTypes from 'AppStateTypes';\n\nimport { Section, Track, Button } from '../../components';\nimport { SpotifyError, Track as TrackType } from '../../services';\nimport { SharedLayout } from '../shared-layout';\nimport { connect } from 'react-redux';\nimport { Account } from '../../redux/reducers/account.reducer';\nimport { ShareableService, StreamTypes, SharedTrack } from '../../services/shareable';\nimport { HasError } from '../shared-layout/share-layout.constants';\nimport { ButtonTypes } from '../../components/shared/button.component';\n\ninterface StateProps {}\n\ninterface StreamProps {\n  account: Account;\n}\ninterface StreamState {\n  hasError: boolean;\n  is_playing: boolean;\n  progress_ms: number;\n  shares: SharedTrack[];\n  isLoading: boolean;\n  copyButtonText: string;\n}\n\nclass Stream extends React.Component<StreamProps, StreamState> {\n  constructor(props: StreamProps) {\n    super(props);\n\n    this.state = {\n      is_playing: true,\n      progress_ms: 0,\n      hasError: false,\n      shares: [],\n      isLoading: false,\n      copyButtonText: 'Copy invite link',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    this.setSharesState((error: SpotifyError) => {\n      // Something bad happened\n      this.setState(HasError);\n    }).then(() => {\n      this.setState({ isLoading: false });\n    });\n  }\n\n  async setSharesState(onError: Function) {\n    const { account } = this.props;\n    const sharesResponse = await ShareableService.getShares(account.accountId, StreamTypes.Followers);\n    const { code } = sharesResponse;\n\n    if (code) {\n      return onError(code);\n    }\n\n    this.setState({ shares: sharesResponse.shares });\n  }\n\n  get streamSubtext() {\n    const { shares = [] } = this.state;\n\n    return shares.length\n      ? 'Listen to the latest shares from your friends.'\n      : 'Your stream is empty, invite your friends to join and share music!';\n  }\n\n  render() {\n    const { hasError, shares = [], isLoading, copyButtonText } = this.state;\n    const { account } = this.props;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={isLoading}>\n        <Section headerText={'Stream'} subText={this.streamSubtext}>\n          {(shares.length &&\n            shares.map((share, index) => {\n              const { account, metadata } = share;\n              return <Track key={index} track={share.track} account={account} metadata={metadata} />;\n            })) || (\n            <Button\n              buttonType={ButtonTypes.Secondary}\n              onClick={() =>\n                navigator.clipboard\n                  .writeText(`${account.displayName} would like to invite you to Shareable! https://shareable.dev`)\n                  .then(() => {\n                    this.setState({ copyButtonText: 'Copied!' }, () => {\n                      setTimeout(() => this.setState({ copyButtonText: 'Copy invite link' }), 1000);\n                    });\n                  })\n              }\n            >\n              {copyButtonText}\n            </Button>\n          )}\n        </Section>\n      </SharedLayout>\n    );\n  }\n}\n\nconst MapStateToProps = (store: AppStateTypes.ReducerState): StateProps => {\n  return {\n    account: store.account,\n  };\n};\n\nexport default connect(MapStateToProps, undefined)(Stream);\n","import React, { Fragment } from 'react';\n\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { withWidth, isWidthDown } from '@material-ui/core';\n\nimport desktopHero from '../../assets/people.jpg';\nimport mobileHero from '../../assets/person.jpg';\nimport shareButton from '../../assets/share-filled-white.svg';\n\nimport { setUser, clearLatestShares } from '../../redux/actions';\nimport * as AppStateTypes from 'AppStateTypes';\nimport { Section, Track, Button } from '../../components';\nimport { SharedLayout } from '../shared-layout';\nimport {\n  SpotifyService,\n  LOGIN_OAUTH,\n  SpotifyError,\n  CurrentPlaybackResponse,\n  LikesResponse,\n  TracksEntity,\n  SpotifyUserProfile,\n  Track as TrackType,\n} from '../../services';\nimport {\n  ShareableService,\n  ShareableErrorCodes,\n  ShareableAccount,\n  StreamTypes,\n  SharedTrack,\n} from '../../services/shareable';\nimport { Spacing, FontSizes } from '../../styles';\nimport { Account } from '../../redux/reducers/account.reducer';\nimport { HasError } from '../shared-layout/share-layout.constants';\n\ninterface OwnProps {\n  width: any;\n}\ninterface DispatchProps {\n  setUser: typeof setUser;\n  clearLatestShares: typeof clearLatestShares;\n}\ninterface StateProps {\n  focusedTrack: any;\n  account: Account;\n  latestShares: TrackType[];\n}\n\ntype HomeProps = OwnProps & DispatchProps & StateProps;\n\ninterface HomeState {\n  hasError: boolean;\n  loggedIn: boolean;\n  isLoading: boolean;\n  name: string;\n  likes: TracksEntity[];\n  shares: SharedTrack[];\n}\n\nclass Home extends React.Component<HomeProps, HomeState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      loggedIn: false,\n      isLoading: true,\n      name: '',\n      likes: [],\n      shares: [],\n    };\n  }\n\n  componentDidMount() {\n    // Clear out the latest shares from the store\n    this.props.clearLatestShares();\n    // TODO: https://developer.spotify.com/documentation/general/guides/authorization-guide/#authorization-code-flow\n    // To refresh the access token automatically\n    const loggedIn = SpotifyService.userIsLoggedIn();\n    if (loggedIn) {\n      Promise.all([\n        SpotifyService.userProfile().then((userProfile: SpotifyUserProfile) => {\n          this.setState({ name: userProfile.displayName.split(' ')[0] });\n          return userProfile;\n        }),\n        this.setCurrentlyPlayingState((error: SpotifyError) => {\n          // Something bad happened\n          this.setState(HasError);\n        }),\n        this.setLikesState((error: SpotifyError) => {\n          // Something bad happened\n          this.setState(HasError);\n        }),\n      ])\n        .then(async ([userProfile, currentlyPlaying, likes]) => {\n          await this.resolveUser(userProfile);\n        })\n        .then(() =>\n          this.setSharesState((error: SpotifyError) => {\n            // Something bad happened\n            this.setState(HasError);\n          })\n        )\n        .finally(() => {\n          this.setState({ isLoading: false });\n        });\n    }\n    this.setState({ loggedIn });\n  }\n\n  async setCurrentlyPlayingState(onError: Function) {\n    const currentlyPlaying: CurrentPlaybackResponse = await SpotifyService.getCurrentlyPlaying();\n    const { error } = currentlyPlaying;\n\n    if (error) {\n      return onError(error);\n    }\n  }\n\n  async setLikesState(onError: Function) {\n    const likes: LikesResponse = await SpotifyService.getLikes();\n    const { error } = likes;\n\n    if (error) {\n      return onError(error);\n    }\n\n    this.setState({ likes: likes.items! });\n  }\n\n  async resolveUser(userProfile: SpotifyUserProfile) {\n    const { setUser } = this.props;\n    const { id: spotifyUserId, displayName, imageUrl, externalUrl } = userProfile;\n\n    const shareableAccount = { spotifyUserId, displayName, imageUrl, externalUrl };\n    const loginResponse = await ShareableService.login(shareableAccount);\n    const { code: errorCode } = loginResponse;\n\n    if (!errorCode) {\n      // done\n      setUser(loginResponse);\n    } else {\n      if (errorCode === ShareableErrorCodes.AccountNotFound) {\n        const registerResponse = await ShareableService.register(shareableAccount);\n        const { code: errorCode } = registerResponse;\n        if (!errorCode) {\n          // done\n          setUser(registerResponse);\n        } else {\n          // TODO: Handle error cases\n          this.setState(HasError);\n        }\n      }\n    }\n  }\n\n  async setSharesState(onError: Function) {\n    const { account } = this.props;\n    const sharesResponse = await ShareableService.getShares(account.accountId, StreamTypes.Self);\n    const { code } = sharesResponse;\n\n    if (code) {\n      return onError(code);\n    }\n\n    this.setState({ shares: sharesResponse.shares });\n  }\n\n  get responsiveHeroStyle(): React.CSSProperties {\n    const { width } = this.props;\n    const responsiveStyles: React.CSSProperties = isWidthDown('xs', width)\n      ? {\n          backgroundImage: `url(${mobileHero})`,\n          marginTop: `-${Spacing.s64}px`,\n          backgroundSize: 'cover',\n          height: '800px',\n        }\n      : {\n          backgroundImage: `url(${desktopHero})`,\n          marginTop: `-${Spacing.s512}px`,\n          backgroundSize: 'cover',\n          height: '1300px',\n        };\n\n    return {\n      ...styles.homeHero,\n      ...responsiveStyles,\n    };\n  }\n\n  get responsiveCtaStyle(): React.CSSProperties {\n    const { width } = this.props;\n    const responsiveStyles: React.CSSProperties = isWidthDown('xs', width)\n      ? { marginTop: '-650px' }\n      : { marginTop: '-700px' };\n\n    return {\n      ...styles.centered,\n      ...responsiveStyles,\n    };\n  }\n\n  render() {\n    const { hasError, loggedIn, name, isLoading, likes, shares = [] } = this.state;\n    const { focusedTrack, latestShares } = this.props;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={loggedIn && isLoading}>\n        {!loggedIn && (\n          <Fragment>\n            <div>\n              <div style={this.responsiveHeroStyle} className={'AppHero-margins'}></div>\n              <div style={this.responsiveCtaStyle}>\n                <div style={styles.headline}>Shareable music experience</div>\n                <Section\n                  style={styles.welcome}\n                  headerText={`Welcome`}\n                  subText={'Please login with your Spotify credentials to continue.'}\n                >\n                  <Button href={LOGIN_OAUTH}>Login with Spotify</Button>\n                </Section>\n              </div>\n            </div>\n          </Fragment>\n        )}\n        {loggedIn && (\n          <Fragment>\n            <Section\n              headerText={`Welcome ${name}!`}\n              subText={'Play music, view your personalized stats and share with your friends.'}\n            ></Section>\n            <Section headerText={'Currently playing'}>\n              <Track track={focusedTrack} />\n            </Section>\n            <Section headerText={'Shares'}>\n              <div style={{ marginBottom: Spacing.s16 }}>\n                Use the Share{' '}\n                <span style={styles.shareButton}>\n                  <img style={styles.shareButton} src={shareButton}></img>\n                </span>{' '}\n                icon on the player below to post a track.\n              </div>\n              {(latestShares.length &&\n                latestShares.map((track, index) => {\n                  return <Track key={index} track={track} subduedHeader={'shared a few moments ago'} />;\n                })) ||\n                ''}\n              {(shares.length &&\n                shares.map((share, index) => {\n                  const { track, metadata } = share;\n                  return <Track key={index} track={track} metadata={metadata} />;\n                })) ||\n                ''}\n            </Section>\n            <Section headerText={'Likes'}>\n              {likes.map((like, index) => {\n                return <Track key={index} track={like.track} />;\n              })}\n            </Section>\n          </Fragment>\n        )}\n      </SharedLayout>\n    );\n  }\n}\n\nconst MapStateToProps = (store: AppStateTypes.ReducerState): StateProps => {\n  return {\n    focusedTrack: store.focusedTrack.track,\n    account: store.account,\n    latestShares: store.focusedTrack.latestShares,\n  };\n};\n\nconst MapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => ({\n  setUser: (user: ShareableAccount) => dispatch(setUser(user)),\n  clearLatestShares: () => dispatch(clearLatestShares()),\n});\n\nconst styles: Record<string, React.CSSProperties> = {\n  homeHero: {\n    zIndex: 0,\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    position: 'relative',\n    WebkitMaskImage: 'linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0))',\n  },\n  centered: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '-700px',\n  },\n  welcome: {\n    zIndex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headline: {\n    zIndex: 1,\n    ...FontSizes.ExtraLarge,\n    marginBottom: Spacing.s64,\n  },\n  shareButton: {\n    width: 15,\n    margin: `-${Spacing.s2}px 1px`,\n  },\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(withWidth()(Home));\n","import React from 'react';\nimport { Spacing, FontSizes } from '../../styles';\n\ninterface SectionProps {\n  headerText?: string;\n  subText?: string;\n  style?: React.CSSProperties;\n}\n\nexport class Section extends React.Component<SectionProps> {\n  componentDidMount() {}\n\n  render() {\n    const { headerText, subText, children, style } = this.props;\n    const styleOverride = {\n      ...styles.streamSection,\n      ...style,\n    };\n\n    return (\n      <div style={styleOverride}>\n        {headerText && <div style={styles.headerText}>{headerText}</div>}\n        {subText && <div style={styles.subText}>{subText}</div>}\n        {children}\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  streamSection: {\n    marginTop: Spacing.s32,\n  },\n  headerText: {\n    marginBottom: Spacing.s16,\n    fontFamily: 'Muli',\n    fontWeight: 700,\n    ...FontSizes.Medium,\n  },\n  subText: {\n    marginBottom: Spacing.s16,\n  },\n};\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return null;\n}\n\nexport default withRouter(ScrollToTop);\n","// Currently Playing\nexport interface CurrentPlaybackResponse {\n  device: Device;\n  shuffle_state: boolean;\n  repeat_state: string;\n  timestamp: number;\n  context: Context;\n  progress_ms: number;\n  item: Track;\n  currently_playing_type: string;\n  actions: Actions;\n  is_playing: boolean;\n  error?: SpotifyError;\n}\nexport interface Device {\n  id: string;\n  is_active: boolean;\n  is_private_session: boolean;\n  is_restricted: boolean;\n  name: string;\n  type: string;\n  volume_percent: number;\n}\nexport interface Context {\n  external_urls: ExternalUrls;\n  href: string;\n  type: string;\n  uri: string;\n}\nexport interface ExternalUrls {\n  spotify: string;\n}\n\nexport interface Album {\n  album_type: string;\n  artists?: ArtistsEntity[] | null;\n  available_markets?: string[] | null;\n  external_urls: ExternalUrls;\n  href: string;\n  id: string;\n  images?: ImagesEntity[] | undefined;\n  name: string;\n  release_date: string;\n  release_date_precision: string;\n  total_tracks: number;\n  type: string;\n  uri: string;\n}\n\nexport interface ArtistsEntity {\n  external_urls: ExternalUrls;\n  followers?: Followers;\n  genres?: string[] | null;\n  href: string;\n  id: string;\n  images?: ImagesEntity[] | undefined;\n  name: string;\n  popularity?: number;\n  type: string;\n  uri: string;\n}\n\nexport interface ImagesEntity {\n  height: number;\n  url: string;\n  width: number;\n}\nexport interface ExternalIds {\n  isrc: string;\n}\nexport interface Actions {\n  disallows: Disallows;\n}\nexport interface Disallows {\n  resuming: boolean;\n}\n\n// Likes\nexport interface LikesResponse {\n  href: string;\n  items?: TracksEntity[] | null;\n  limit: number;\n  next: string;\n  offset: number;\n  previous?: null;\n  total: number;\n  error?: SpotifyError;\n}\nexport interface TracksEntity {\n  added_at: string;\n  track: Track;\n}\nexport interface Track {\n  album: Album;\n  artists?: ArtistsEntity[] | null;\n  available_markets?: string[] | null;\n  disc_number: number;\n  duration_ms: number;\n  explicit: boolean;\n  external_ids: ExternalIds;\n  external_urls: ExternalUrls;\n  href: string;\n  id: string;\n  is_local: boolean;\n  name: string;\n  popularity: number;\n  preview_url: string;\n  track_number: number;\n  type: string;\n  uri: string;\n}\n\n// Top\nexport enum SpotifyTimeRange {\n  ShortTerm = 'short_term', // 4 weeks\n  MediumTerm = 'medium_term', // 6 months\n  LongTerm = 'long_term', // Several years of data\n}\n\nexport enum SpotifyTopType {\n  Artists = 'artists',\n  Tracks = 'tracks',\n}\n\nexport interface TopResponse {\n  items: ArtistsEntity[] & Track[];\n  total: number;\n  limit: number;\n  offset: number;\n  href: string;\n  previous?: null;\n  next: string;\n  error?: SpotifyError;\n}\n\nexport interface Followers {\n  href?: null;\n  total: number;\n}\n\n// Errors\nexport interface SpotifyError {\n  status: number;\n  message: string;\n}\n\nexport enum SpotifyErrorMessages {\n  TokenExpired = 'The access token expired',\n}\n\nexport interface SpotifyUserProfile {\n  displayName: string;\n  externalUrl: string;\n  imageUrl: string;\n  email: string;\n  country: string;\n  error: string;\n  id: string;\n  uri: string;\n  followers: number;\n}\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Select as MaterialSelect,\n  SelectProps as MaterialSelectProps,\n  Theme,\n  createStyles,\n  WithStyles,\n  createMuiTheme,\n  MuiThemeProvider,\n} from '@material-ui/core';\n\nimport { Colors, Spacing } from '../../styles';\n\ninterface OwnProps extends WithStyles<typeof styles> {}\ntype DropdownProps = MaterialSelectProps & OwnProps;\n\n// TODO: Need to revisit this\nclass Dropdown extends React.Component<DropdownProps> {\n  constructor(props: DropdownProps) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { children, classes, ...materialProps } = this.props;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MaterialSelect {...materialProps} className={`${classes.root} ${classes.label}`}>\n          {children}\n        </MaterialSelect>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      color: Colors.White,\n      background: Colors.ShareableLavender,\n      height: 48,\n      fontWeight: 'bold',\n      borderRadius: 4,\n      letterSpacing: 0.6,\n      fontFamily: 'Muli',\n      [theme.breakpoints.down('sm')]: {\n        width: '100%',\n      },\n      '&:hover': {\n        backgroundColor: Colors.ShareableLightLavender,\n      },\n      '&:disabled': {\n        color: Colors.DisabledText,\n        backgroundColor: Colors.DisabledBackground,\n        border: 0,\n      },\n    },\n    secondary: {\n      background: 'transparent',\n      border: 'solid',\n      borderWidth: 1,\n      borderColor: Colors.White,\n      '&:hover': {\n        backgroundColor: Colors.ShareableLavender,\n        borderColor: Colors.ShareableLavender,\n        borderWidth: 1,\n      },\n    },\n    label: {\n      textTransform: 'none',\n    },\n  });\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInput: {},\n    MuiSelect: {\n      root: {\n        paddingLeft: `${Spacing.s24}px !important`,\n        paddingRight: `${Spacing.s48}px !important`,\n      },\n      icon: {\n        marginRight: Spacing.s16,\n      },\n      select: {\n        '&:focus': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n    MuiList: {\n      root: {\n        backgroundColor: Colors.ScreenBackground,\n      },\n    },\n    MuiMenuItem: {\n      root: {\n        fontFamily: 'Muli',\n        backgroundColor: 'transparent',\n        color: Colors.White,\n        '&$selected': {\n          // <-- mixing the two classes\n          backgroundColor: Colors.c600,\n        },\n        '&:hover': {\n          backgroundColor: Colors.c500,\n        },\n      },\n    },\n  },\n});\nexport default withStyles(styles)(Dropdown);\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { createStyles, WithStyles } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Theme } from '@material-ui/core';\n\nimport defaultProfileImage from '../../assets/badminton.png';\n\nimport { SharedLayout } from '../shared-layout';\nimport { Section, Profile } from '../../components';\nimport { SpotifyService, SpotifyUserProfile } from '../../services';\nimport { Button } from '../../components/shared';\nimport { StorageService, StorageKeys } from '../../services/storage';\nimport { ButtonTypes } from '../../components/shared/button.component';\n\ninterface StyleProps extends WithStyles<typeof styles> {}\ninterface AccountProps extends RouteComponentProps<any> {}\n\ntype AllProps = StyleProps & AccountProps;\ninterface AccountState {\n  hasError: boolean;\n  userProfile: SpotifyUserProfile;\n}\n\nclass Account extends React.Component<AllProps, AccountState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      userProfile: {} as SpotifyUserProfile,\n    };\n  }\n\n  componentDidMount() {\n    this.setUserProfile(() => {\n      this.setState({ hasError: true });\n    });\n  }\n\n  async setUserProfile(onError: Function) {\n    const userProfile = await SpotifyService.userProfile();\n    const { error } = userProfile;\n\n    if (error) {\n      return onError(error);\n    }\n\n    this.setState({ userProfile });\n  }\n\n  logout() {\n    Object.keys(StorageKeys).forEach((key) => StorageService.remove((StorageKeys as any)[key]));\n    SpotifyService.logout();\n    this.props.history.push('/');\n    window.location.reload();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { hasError, userProfile } = this.state;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={false}>\n        <Section headerText={`Account information`}>\n          <Profile\n            imageClassName={classes.image}\n            imageUrl={userProfile.imageUrl || defaultProfileImage}\n            onClickImage={() => window.open(userProfile.externalUrl, '_blank')}\n            info={{\n              name: userProfile.displayName,\n              followers: `${userProfile.followers}`,\n            }}\n            displayKeys={true}\n          ></Profile>\n        </Section>\n        <Section>\n          <Button\n            buttonType={ButtonTypes.Secondary}\n            onClick={() => {\n              this.logout();\n            }}\n          >\n            Logout\n          </Button>\n        </Section>\n      </SharedLayout>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    image: {\n      width: '150px !important', // TODO: Figure out specificity the right way\n      height: '150px !important',\n      [theme.breakpoints.down('sm')]: {\n        width: '100px !important', // TODO: Figure out specificity the right way\n        height: '100px !important',\n      },\n    },\n  });\n\nexport default withStyles(styles)(Account);\n","import { SpotifyTimeRange } from '../../services/spotify/spotify.types';\n\nexport const SpotifyTimeRangeToDisplay = {\n  [SpotifyTimeRange.ShortTerm]: 'Last 4 weeks',\n  [SpotifyTimeRange.MediumTerm]: 'Last 6 months',\n  [SpotifyTimeRange.LongTerm]: 'All time',\n};\n\nexport const SpotifyTimeRangeList = [\n  SpotifyTimeRange.ShortTerm,\n  SpotifyTimeRange.MediumTerm,\n  SpotifyTimeRange.LongTerm,\n];\n","import { ThunkAction } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nimport { action } from 'typesafe-actions';\n\nimport { SpotifyService, Track } from '../../services';\nimport { ShareableAccount, ShareableService, StreamShare, ShareableErrorCodes } from '../../services/shareable';\nimport { FocusedTrack } from '../reducers/focused-track.reducer';\nimport { Account } from '../reducers/account.reducer';\n\n// use typescript enum rather than action constants\nexport enum ActionTypes {\n  PAUSE_FOCUSED = 'PAUSE_FOCUSED',\n  SET_FOCUSED = 'SET_FOCUSED',\n  SET_USER = 'SET_USER',\n  SET_SHARED = 'SET_SHARED',\n  CLEAR_LATEST_SHARES = 'CLEAR_LATEST_SHARES',\n}\n\n// State actions\nexport const pauseFocused = (track: Track) => action(ActionTypes.PAUSE_FOCUSED, track);\nexport const setFocused = (track: Track) => action(ActionTypes.SET_FOCUSED, track);\nexport const setUser = (user: ShareableAccount) => action(ActionTypes.SET_USER, user);\nexport const setShared = (track: Track) => action(ActionTypes.SET_SHARED, track);\nexport const clearLatestShares = () => action(ActionTypes.CLEAR_LATEST_SHARES);\n\n// Thunk actions\nexport const playSong = (track: Track): ThunkAction<void, {}, {}, AnyAction> => {\n  // Thunk middleware will pass the dispatch method to this function\n  return (dispatch): void => {\n    SpotifyService.playSongs([track.uri]);\n    dispatch(setFocused(track));\n  };\n};\n\n// TODO: Support optional params to share a non-focused track\nexport const shareSong = (): ThunkAction<void, any, {}, AnyAction> => {\n  return (dispatch, getState): void => {\n    const {\n      focusedTrack: {\n        track: { id: trackId },\n      },\n      account: { accountId },\n      focusedTrack,\n    }: { focusedTrack: FocusedTrack; account: Account } = getState();\n    const share = { trackId, accountId };\n\n    ShareableService.addShare(share).then((response) => {\n      const { code } = response;\n\n      if (code === ShareableErrorCodes.EntityAlreadyExists) {\n        return;\n      }\n      dispatch(setShared(focusedTrack.track));\n    });\n  };\n};\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withWidth, isWidthDown, isWidthUp } from '@material-ui/core';\n\nimport pineapple from '../../assets/pineapple.svg';\nimport dinosaur from '../../assets/dinosaur.svg';\n\nimport { SharedLayout, HasError } from '../shared-layout';\nimport { Section, Profile, Button, Dropdown } from '../../components';\nimport {\n  TopResponse,\n  SpotifyService,\n  SpotifyTopType,\n  ArtistsEntity,\n  SpotifyTimeRange,\n  Track,\n  Album,\n} from '../../services';\nimport { Spacing, Colors } from '../../styles';\nimport { playSong } from '../../redux/actions';\nimport { ButtonTypes } from '../../components/shared/button.component';\nimport { SpotifyTimeRangeToDisplay, SpotifyTimeRangeList } from './stats.page.constants';\n\ninterface OwnProps {\n  width: any;\n}\n\ninterface DispatchProps {\n  playSong: typeof playSong;\n}\n\ntype StatsProps = OwnProps & DispatchProps;\n\ninterface StatsState {\n  hasError: boolean;\n  topArtistsTimeRange: SpotifyTimeRange;\n  topTracksTimeRange: SpotifyTimeRange;\n  topArtists: ArtistsEntity[];\n  topTracks: Track[];\n  isLoading: boolean;\n  topArtistsPage: number;\n  topTracksPage: number;\n  topArtistsTotal: number;\n  topTracksTotal: number;\n}\n\nclass Stats extends React.Component<StatsProps, StatsState> {\n  maxTopPageOffset = 5;\n  topLimit = 10;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      topArtistsTimeRange: SpotifyTimeRange.ShortTerm,\n      topTracksTimeRange: SpotifyTimeRange.ShortTerm,\n      topArtists: [],\n      topTracks: [],\n      hasError: false,\n      isLoading: true,\n      topArtistsPage: 0,\n      topTracksPage: 0,\n      topArtistsTotal: 0,\n      topTracksTotal: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setTopsState(() => this.setState(HasError));\n  }\n\n  async setTopsState(onError: Function) {\n    const { topArtistsTimeRange, topTracksTimeRange, topArtistsPage, topTracksPage } = this.state;\n    const topArtistsResponse: TopResponse = await SpotifyService.getTop(\n      SpotifyTopType.Artists,\n      topArtistsTimeRange,\n      this.topLimit,\n      topArtistsPage * this.topLimit\n    );\n    const topTracksResponse: TopResponse = await SpotifyService.getTop(\n      SpotifyTopType.Tracks,\n      topTracksTimeRange,\n      this.topLimit,\n      topTracksPage * this.topLimit\n    );\n\n    const { error: topArtistsError, items: topArtists = [], total: topArtistsTotal } = topArtistsResponse;\n    const { error: topTracksError, items: topTracks = [], total: topTracksTotal } = topTracksResponse;\n\n    if (topArtistsError || topTracksError) {\n      return onError(topArtistsError, topTracksError);\n    }\n\n    this.setState({ topArtists, topTracks, topArtistsTotal, topTracksTotal, isLoading: false });\n  }\n\n  private handleSelect(event, type: SpotifyTopType) {\n    const {\n      target: { value: range },\n    } = event;\n    const timeRangeForType: keyof StatsState =\n      type === SpotifyTopType.Artists ? 'topArtistsTimeRange' : 'topTracksTimeRange';\n    const pageForType: keyof StatsState = type === SpotifyTopType.Artists ? 'topArtistsPage' : 'topTracksPage';\n\n    // Using never as a workaround when calling setState with dynamic keys\n    this.setState<never>({ [timeRangeForType]: range, [pageForType]: 0 }, () => {\n      this.setTopsState(() => this.setState(HasError));\n      this.scrollTopTypeStart(type);\n    });\n  }\n\n  renderTimeRangeButtons(type: SpotifyTopType) {\n    const timeRangeForType: keyof StatsState =\n      type === SpotifyTopType.Artists ? 'topArtistsTimeRange' : 'topTracksTimeRange';\n\n    return (\n      <div style={{ ...styles.row, ...styles.timeToggle }}>\n        <Dropdown value={this.state[timeRangeForType]} onChange={(event) => this.handleSelect(event, type)}>\n          {SpotifyTimeRangeList.map((range, index) => {\n            return (\n              <MenuItem key={index} value={range}>\n                {SpotifyTimeRangeToDisplay[range]}\n              </MenuItem>\n            );\n          })}\n        </Dropdown>\n      </div>\n    );\n  }\n\n  scrollTopTypeStart(topType: SpotifyTopType) {\n    const topElement = document.getElementById(topType);\n\n    if (topElement) {\n      topElement.scrollLeft = 0;\n    }\n  }\n\n  incrementPage(topType: SpotifyTopType, increment: number) {\n    const pageState = topType === SpotifyTopType.Artists ? 'topArtistsPage' : 'topTracksPage';\n\n    this.setState<never>(\n      (previousState) => {\n        let previousPage = previousState[pageState];\n        const nextPage = previousPage + increment >= this.maxTopPageOffset ? 0 : previousPage + increment;\n        return { [pageState]: nextPage };\n      },\n      () => {\n        this.setTopsState(() => this.setState(HasError));\n        this.scrollTopTypeStart(topType);\n      }\n    );\n  }\n\n  private hasNextPage(topType: SpotifyTopType) {\n    const type = topType === SpotifyTopType.Artists ? 'topArtists' : 'topTracks';\n    const currentPage: number = this.state[`${type}Page`];\n    const topTotal: number = this.state[`${type}Total`];\n    return currentPage + 1 < this.maxTopPageOffset && (currentPage + 1) * this.topLimit < topTotal;\n  }\n\n  renderPageChange(topType: SpotifyTopType) {\n    const type = topType === SpotifyTopType.Artists ? 'topArtists' : 'topTracks';\n    const currentPage: number = this.state[`${type}Page`];\n    const topTotal: number = this.state[`${type}Total`];\n\n    return (\n      <div style={{ ...styles.row, ...styles.pageToggle }}>\n        <Button\n          style={{ width: 'auto' }}\n          disabled={currentPage === 0}\n          buttonType={ButtonTypes.Secondary}\n          onClick={() => this.incrementPage(topType, -1)}\n        >\n          Back\n        </Button>\n        <Button\n          style={{ width: 'auto' }}\n          disabled={!this.hasNextPage(topType)}\n          buttonType={ButtonTypes.Secondary}\n          onClick={() => this.incrementPage(topType, 1)}\n        >\n          Next\n        </Button>\n        <div style={{ color: Colors.c300 }}>\n          Page {currentPage + 1} of {Math.floor(topTotal / this.topLimit)}\n        </div>\n      </div>\n    );\n  }\n\n  get responsiveRowStyle(): React.CSSProperties {\n    const { width } = this.props;\n    const mobileStyles: React.CSSProperties = isWidthDown('xs', width)\n      ? {\n          overflowX: 'auto',\n          height: '260px',\n          width: '100%',\n        }\n      : {\n          height: isWidthUp('lg', width) ? '600px' : 'auto',\n        };\n    return {\n      ...styles.row,\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      alignItems: 'flex-start',\n      justifyContent: 'none',\n      ...mobileStyles,\n    };\n  }\n\n  responsiveProfileStyles(type: SpotifyTopType): React.CSSProperties {\n    const { width } = this.props;\n    const mobileStyles: React.CSSProperties = isWidthDown('sm', width)\n      ? {\n          width: type === SpotifyTopType.Artists ? '90%' : '80%',\n          marginRight: Spacing.s16,\n          marginBottom: Spacing.s16,\n        }\n      : {};\n    return {\n      ...styles.profile,\n      ...mobileStyles,\n    };\n  }\n\n  getImageUrl(entity: ArtistsEntity | Album, defaultImage: string) {\n    const { images = [] } = entity;\n\n    if (images.length) {\n      return (images[0] && images[0].url) || defaultImage;\n    }\n    return defaultImage;\n  }\n\n  render() {\n    const { hasError, topArtists, topTracks, isLoading, topArtistsPage, topTracksPage } = this.state;\n\n    return (\n      <SharedLayout hasError={hasError} isLoading={isLoading}>\n        <div>\n          <Section headerText={`Top artists`}>\n            {this.renderTimeRangeButtons(SpotifyTopType.Artists)}\n            <div id={SpotifyTopType.Artists} style={this.responsiveRowStyle}>\n              {topArtists &&\n                topArtists.map((artist: ArtistsEntity, index: number) => {\n                  return (\n                    <Profile\n                      key={index}\n                      style={this.responsiveProfileStyles(SpotifyTopType.Artists)}\n                      imageStyle={styles.image}\n                      imageUrl={this.getImageUrl(artist, dinosaur)}\n                      onClickImage={() => window.open(artist.external_urls.spotify, '_blank')}\n                      displayKeys={false}\n                      info={{\n                        rank: `${index + topArtistsPage * 10 + 1}`,\n                        name: artist.name,\n                        genres: artist.genres!.slice(0, 4).join(', '),\n                      }}\n                    ></Profile>\n                  );\n                })}\n            </div>\n            {this.renderPageChange(SpotifyTopType.Artists)}\n          </Section>\n        </div>\n        <div>\n          <Section headerText={`Top tracks`}>\n            {this.renderTimeRangeButtons(SpotifyTopType.Tracks)}\n            <div id={SpotifyTopType.Tracks} style={this.responsiveRowStyle}>\n              {topTracks &&\n                topTracks.map((track: Track, index: number) => {\n                  return (\n                    <Profile\n                      key={index}\n                      style={this.responsiveProfileStyles(SpotifyTopType.Tracks)}\n                      imageStyle={styles.image}\n                      imageUrl={this.getImageUrl(track.album, pineapple)}\n                      onClickImage={() => this.props.playSong(track)}\n                      displayKeys={false}\n                      info={{\n                        rank: `${index + topTracksPage * 10 + 1}`,\n                        title: track.name,\n                        artist: track.artists![0].name,\n                      }}\n                      circular={false}\n                    ></Profile>\n                  );\n                })}\n            </div>\n            {this.renderPageChange(SpotifyTopType.Tracks)}\n          </Section>\n        </div>\n      </SharedLayout>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  row: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: Spacing.s16,\n    scrollBehavior: 'smooth',\n  },\n  profile: {\n    width: 500,\n    marginBottom: Spacing.s12,\n    marginRight: Spacing.s48,\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  timeToggle: {\n    marginBottom: Spacing.s24,\n  },\n  pageToggle: {\n    maxWidth: '300px',\n    flexWrap: 'nowrap',\n  },\n};\n\nconst MapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => ({\n  playSong: (track: any) => dispatch(playSong(track)),\n});\n\nexport default connect(undefined, MapDispatchToProps)(withWidth()(Stats));\n","import { Home, Stream, Account, Stats } from '../pages';\n\n/**\n * @prop path - required\n * @prop page - required\n * @prop header - optional, value to display on header nav\n * @prop rightAlignedHeader - optional, if the header is right aligned\n */\nexport interface AppRoute {\n  path: string;\n  page: any;\n  header?: string;\n  rightAlignedHeader?: boolean;\n}\n\nexport const AppRoutes: AppRoute[] = [\n  // Header routes\n  {\n    path: '/',\n    page: Home,\n    header: 'shareable',\n  },\n  {\n    path: '/stats',\n    page: Stats,\n    header: 'stats',\n  },\n  {\n    path: '/stream',\n    page: Stream,\n    header: 'stream',\n  },\n  {\n    path: '/account',\n    page: Account,\n    header: 'account',\n    rightAlignedHeader: true,\n  },\n  // Other routes\n];\n","import config from '../../config';\n\n// APIs\nexport const SPOTIFY_API_HOSTNAME = 'https://api.spotify.com';\nexport const PLAYER_API = `${SPOTIFY_API_HOSTNAME}/v1/me/player`;\nexport const SAVED_TRACKS_API = `${SPOTIFY_API_HOSTNAME}/v1/me/tracks`;\nexport const USER_PROFILE_API = `${SPOTIFY_API_HOSTNAME}/v1/me`;\nexport const USER_TOP_API = `${SPOTIFY_API_HOSTNAME}/v1/me/top`;\nexport const PLAYER_PLAY_API = `${SPOTIFY_API_HOSTNAME}/v1/me/player/play`;\nexport const GET_TRACKS_API = `${SPOTIFY_API_HOSTNAME}/v1/tracks`;\n\n// Auth\nexport const AUTH_API = 'https://accounts.spotify.com/authorize';\nexport const LOGIN_OAUTH = `${AUTH_API}?client_id=${config.clientId}&redirect_uri=${\n  config.redirectUri\n}&scope=${config.scopes.join('%20')}&response_type=token&show_dialog=true`;\n","import { hash, parseJson } from '../../utils';\nimport { StorageService, StorageKeys } from '../storage';\n\nimport {\n  PLAYER_API,\n  SAVED_TRACKS_API,\n  USER_PROFILE_API,\n  USER_TOP_API,\n  PLAYER_PLAY_API,\n  GET_TRACKS_API,\n} from './spotify.constants';\nimport {\n  CurrentPlaybackResponse,\n  LikesResponse,\n  SpotifyErrorMessages,\n  SpotifyUserProfile,\n  SpotifyTimeRange,\n  SpotifyTopType,\n} from './spotify.types';\n\nexport const SpotifyService = new (class {\n  private token: string = '';\n  constructor() {}\n\n  private get headers() {\n    return new Headers({\n      Authorization: 'Bearer ' + this.token,\n    });\n  }\n\n  private resolveTokenInStorage(hasTokenInStorage: boolean, token: string) {\n    if (!hasTokenInStorage) {\n      StorageService.set(StorageKeys.SpotifyToken, token);\n      StorageService.setExpiration(StorageKeys.SpotifyToken, 36000000); // 1 hr\n    } else {\n      StorageService.checkExpiration();\n    }\n  }\n\n  logout() {\n    this.token = '';\n  }\n\n  async userProfile(): Promise<SpotifyUserProfile> {\n    const profileFromStorage = StorageService.get(StorageKeys.UserProfile);\n\n    if (!profileFromStorage) {\n      const response = await this.getUserProfile();\n      const { display_name: displayName, external_urls, images, email, country, followers, error, uri, id } = response;\n      const imageUrl = (images && images.length && images[0].url) || '';\n      const externalUrl = external_urls && external_urls.spotify;\n\n      const userProfile = {\n        displayName,\n        externalUrl,\n        email,\n        country,\n        imageUrl,\n        followers: followers && followers.total,\n        error,\n        uri,\n        id,\n      };\n      StorageService.set(StorageKeys.UserProfile, JSON.stringify(userProfile));\n      return userProfile;\n    } else {\n      return JSON.parse(profileFromStorage);\n    }\n  }\n\n  userIsLoggedIn(): boolean {\n    return !!this.token;\n  }\n\n  resolveUserToken(): string {\n    // Set token\n    this.token = hash.access_token;\n    const tokenFromStorage = StorageService.get(StorageKeys.SpotifyToken);\n\n    if (!!tokenFromStorage || !!this.token) {\n      this.token = tokenFromStorage || this.token;\n      this.resolveTokenInStorage(!!tokenFromStorage, this.token);\n      return this.token;\n    }\n    return '';\n  }\n\n  getUserProfile(): Promise<any> {\n    return this.request(USER_PROFILE_API, 'GET');\n  }\n\n  getCurrentlyPlaying(): Promise<CurrentPlaybackResponse> {\n    // Make a call using the token\n    return this.request(PLAYER_API, 'GET');\n  }\n\n  /**\n   * Transfer playback to a new device and determine if it should start playing.\n   * @param deviceIds array of device ids to transfer playback to, only a single device id is currently supported\n   * @param play true: ensure playback happens on new device. false or not provided: keep the current playback state.\n   */\n  transferPlayback(deviceIds: string[], play: boolean = false): Promise<any> {\n    return this.request(PLAYER_API, 'PUT', { device_ids: deviceIds, play });\n  }\n\n  getLikes(limit: number = 10, offset: number = 0): Promise<LikesResponse> {\n    return this.request(`${SAVED_TRACKS_API}?limit=${limit}&offset=${offset}`, 'GET');\n  }\n\n  getTop(\n    type: SpotifyTopType,\n    timeRange: SpotifyTimeRange = SpotifyTimeRange.ShortTerm,\n    limit: number = 10,\n    offset: number = 0\n  ): Promise<any> {\n    return this.request(`${USER_TOP_API}/${type}?limit=${limit}&offset=${offset}&time_range=${timeRange}`, 'GET');\n  }\n\n  playSongs(uris: string[]): Promise<any> {\n    return this.request(`${PLAYER_PLAY_API}`, 'PUT', { uris });\n  }\n\n  getTracks(ids: string[]): Promise<any> {\n    const idsParam = ids.length ? `&ids=${encodeURIComponent(ids.join(','))}` : '';\n\n    if (!idsParam) {\n      // We can't check if the ids list is empty, return []\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.request(`${GET_TRACKS_API}?${idsParam}`, 'GET');\n  }\n\n  request(url: string, method: string, body?: any): Promise<any> {\n    return fetch(url, {\n      method,\n      headers: this.headers,\n      body: JSON.stringify(body),\n    })\n      .then(parseJson)\n      .then(this.errorHandler.bind(this));\n  }\n\n  errorHandler(response: any) {\n    const { error } = response;\n    if (error) {\n      switch (error.message) {\n        case SpotifyErrorMessages.TokenExpired:\n          StorageService.remove(StorageKeys.SpotifyToken);\n      }\n    }\n    return response;\n  }\n})();\n","import React, { CSSProperties } from 'react';\nimport { Spacing, Colors } from '../../styles';\n\ninterface ProfileProps {\n  imageUrl: string;\n  onClickImage?: Function;\n  info?: Record<string, string>;\n  style?: CSSProperties;\n  imageStyle?: CSSProperties;\n  displayKeys?: boolean;\n  circular?: boolean;\n  imageClassName?: string;\n}\n\ninterface ProfileState {\n  imageDimensions: { height: number; width: number };\n}\n\nexport class Profile extends React.Component<ProfileProps, ProfileState> {\n  constructor(props: ProfileProps) {\n    super(props);\n    this.state = {\n      imageDimensions: {\n        height: 150,\n        width: 150,\n      },\n    };\n  }\n\n  componentDidMount() {}\n\n  onImgLoad({ target: img }) {\n    this.setState({ imageDimensions: { height: img.offsetHeight, width: img.offsetWidth } });\n  }\n\n  get isLandscape() {\n    const { width, height } = this.state.imageDimensions;\n    if (!width || !height) {\n      return false;\n    }\n    const aspectRatio = width / height;\n    return width > height && Math.abs(aspectRatio) >= 1.2;\n  }\n\n  get isPortrait() {\n    const { width, height } = this.state.imageDimensions;\n    if (!width || !height) {\n      return false;\n    }\n\n    const aspectRatio = width / height;\n    return height > width && Math.abs(aspectRatio) <= 0.9;\n  }\n\n  get landscapeImgStyle() {\n    const { width } = this.state.imageDimensions;\n    return this.isLandscape ? { marginLeft: -(width / 8), width: 'auto', height: '100%' } : {};\n  }\n\n  get portraitImgStyle() {\n    return this.isPortrait ? { width: '100%', height: 'auto' } : {};\n  }\n\n  render() {\n    const {\n      imageUrl,\n      info,\n      style,\n      imageStyle,\n      displayKeys = true,\n      onClickImage,\n      circular = true,\n      imageClassName,\n    } = this.props;\n    const styleOverride = {\n      ...styles.profileContainer,\n      ...style,\n    };\n    const imageContainerStyleOverride = {\n      ...styles.imageContainer,\n      ...imageStyle,\n      borderRadius: circular ? '50%' : undefined,\n    };\n    const imageStyleOverride = {\n      ...styles.image,\n      ...this.landscapeImgStyle,\n      ...this.portraitImgStyle,\n    };\n\n    return (\n      <div style={styleOverride}>\n        <div>\n          <div className={imageClassName} style={imageContainerStyleOverride}>\n            <img\n              className={`art`}\n              onLoad={this.onImgLoad.bind(this)}\n              alt={'profileImage'}\n              style={imageStyleOverride}\n              src={imageUrl}\n              onClick={() => onClickImage && onClickImage()}\n            />\n          </div>\n        </div>\n        <div style={styles.infoContainer}>\n          {displayKeys && info && (\n            <div style={styles.infoKeys}>\n              {Object.keys(info).map((key) => {\n                return <div key={key}>{key}</div>;\n              })}\n            </div>\n          )}\n          <div style={styles.infoValues}>\n            {info &&\n              Object.keys(info).map((key) => {\n                return <div key={key}>{info[key]}</div>;\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  profileContainer: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  imageContainer: {\n    display: 'inline-block',\n    position: 'relative',\n    overflow: 'hidden',\n    borderRadius: '50%',\n    width: 100,\n    height: 100,\n  },\n  image: {\n    width: 'auto',\n    height: '100%',\n  },\n  infoKeys: {\n    textAlign: 'right',\n    marginRight: Spacing.s12,\n    color: Colors.c400,\n  },\n  infoValues: {\n    fontWeight: 600,\n  },\n  infoContainer: {\n    display: 'flex',\n    marginLeft: Spacing.s16,\n  },\n};\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport './track.css';\nimport './track.scss';\n\nimport defaultProfileImage from '../../assets/default-profile.svg';\n\nimport { Track as TrackType } from '../../services';\nimport { Spacing, FontSizes, Colors } from '../../styles';\nimport { playSong } from '../../redux/actions';\nimport { ShareableAccount, SharedTrackMetadata } from '../../services/shareable';\nimport { timeSince } from '../../utils';\nimport { Profile } from '../profile';\n\ninterface OwnProps {\n  track: TrackType;\n  account?: ShareableAccount;\n  metadata?: SharedTrackMetadata;\n  subduedHeader?: string;\n}\ninterface DispatchProps {\n  playSong: typeof playSong;\n}\ninterface StateProps {}\n\ntype TrackProps = OwnProps & DispatchProps & StateProps;\n\ninterface TrackState {}\n\nclass Track extends React.Component<TrackProps, TrackState> {\n  renderArtists() {\n    const { track } = this.props;\n\n    return <div style={styles.artistName}>{track.artists!.map((artist: any) => artist.name).join(', ')}</div>;\n  }\n\n  renderTrackTitle() {\n    const { track } = this.props;\n\n    return <div style={styles.trackTitle}>{track.name}</div>;\n  }\n\n  hasData(track: TrackType) {\n    return (\n      track &&\n      track.artists &&\n      track.album &&\n      track.album.images &&\n      track.album.images.length &&\n      track.album.images[0].url\n    );\n  }\n\n  renderTimestamp() {\n    const { metadata } = this.props;\n    const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    return (\n      <span style={styles.metadata}>\n        {metadata &&\n          'shared' +\n            ' ' +\n            timeSince(new Date(metadata.createdAt).getTime()) +\n            ' on ' +\n            new Date(metadata.createdAt).toLocaleString('en-US', dateOptions)}\n      </span>\n    );\n  }\n\n  renderMetadata() {\n    const { account, metadata } = this.props;\n\n    if (!account && !metadata) {\n      return;\n    }\n\n    let { imageUrl, externalUrl } = account || {};\n    if (!imageUrl || imageUrl === '') {\n      imageUrl = defaultProfileImage;\n    }\n    return (\n      <div style={styles.metadataContainer}>\n        {account && (\n          <div style={{ ...styles.row }}>\n            <Profile\n              style={{ width: 25, height: 25, alignItems: 'center', marginRight: Spacing.s8 }}\n              imageStyle={{ width: 25, height: 25 }}\n              imageUrl={imageUrl}\n              onClickImage={() => externalUrl && window.open(externalUrl, '_blank')}\n            ></Profile>\n            <div>\n              {(account.displayName || account.spotifyUserId) + ' '}\n              {this.renderTimestamp()}\n            </div>\n          </div>\n        )}\n        {!account && this.renderTimestamp()}\n      </div>\n    );\n  }\n\n  renderSubduedHeader() {\n    const { subduedHeader } = this.props;\n    if (!subduedHeader) {\n      return;\n    }\n\n    return (\n      <div style={styles.metadataContainer}>\n        <span style={styles.metadata}>{subduedHeader}</span>\n      </div>\n    );\n  }\n\n  render() {\n    const { track } = this.props;\n\n    return (\n      <div className=\"track\" style={styles.track}>\n        {this.hasData(track) ? (\n          <div style={styles.column}>\n            {this.renderSubduedHeader()}\n            {this.renderMetadata()}\n            <div style={styles.row}>\n              <div style={styles.coverArt}>\n                <img\n                  alt={'trackImage'}\n                  className=\"art\"\n                  src={track.album!.images![0].url}\n                  onClick={() => this.props.playSong(track)}\n                />\n              </div>\n              <div className=\"track__content\">\n                {this.renderArtists()}\n                {this.renderTrackTitle()}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>Nothing found</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst styles: Record<any, React.CSSProperties> = {\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  column: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  metadataContainer: {\n    marginBottom: Spacing.s12,\n  },\n  artistName: {\n    ...FontSizes.MediumSmall,\n  },\n  track: {\n    marginBottom: Spacing.s24,\n  },\n  coverArt: {\n    marginRight: Spacing.s16,\n  },\n  trackTitle: {\n    ...FontSizes.MediumLarge,\n  },\n  metadata: {\n    color: Colors.c400,\n  },\n};\n\nconst MapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => ({\n  playSong: (track: any) => dispatch(playSong(track)),\n});\n\nexport default connect(undefined, MapDispatchToProps)(Track);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { shareSong } from '../../redux/actions';\n\nimport { WithStyles } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createStyles, Tooltip, Theme, Snackbar } from '@material-ui/core';\n\nimport * as AppStateTypes from 'AppStateTypes';\n\nimport shareIcon from '../../assets/share-white.svg';\nimport shareIconFilled from '../../assets/share-filled-white.svg';\nimport { APP_HEADER_HEIGHT, Colors } from '../../styles';\n\ninterface OwnProps extends WithStyles<typeof styles> {\n  className?: string;\n}\ninterface DispatchProps {\n  shareSong: typeof shareSong;\n}\ninterface StateProps {\n  isShared: boolean;\n}\n\ntype RepostProps = OwnProps & DispatchProps & StateProps;\n\ninterface RepostState {\n  toastOpen: boolean;\n}\n\nclass Repost extends React.Component<RepostProps, RepostState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toastOpen: false,\n    };\n  }\n\n  handleShare() {\n    const { shareSong } = this.props;\n    this.setState({ toastOpen: true }, () => shareSong());\n  }\n\n  handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ toastOpen: false });\n  }\n\n  render() {\n    const { className, classes, shareSong, isShared = false } = this.props;\n    const { toastOpen } = this.state;\n\n    // TODO: Figure out share state for focused tracks\n    return (\n      <div className={className}>\n        <Tooltip title={<div className={classes.multiFont}>Share</div>} arrow>\n          <div className={classes.img} onClick={this.handleShare.bind(this)}></div>\n        </Tooltip>\n        <Snackbar\n          ContentProps={{ classes: { root: classes.multiFont } }}\n          style={{ marginTop: APP_HEADER_HEIGHT }}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={toastOpen}\n          autoHideDuration={4000}\n          onClose={this.handleClose.bind(this)}\n          message={'Track shared to your followers'}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    img: {\n      cursor: 'pointer',\n      backgroundRepeat: 'no-repeat',\n      backgroundImage: `url(${shareIcon})`,\n      width: 22,\n      height: 22,\n      transition: 'all 0.6s ease-in-out',\n      '&:hover': {\n        backgroundImage: `url(${shareIconFilled})`,\n      },\n    },\n    multiFont: {\n      fontFamily: 'Muli',\n    },\n  });\n\nconst MapStateToProps = (store: AppStateTypes.ReducerState): StateProps => {\n  return {\n    isShared: store.focusedTrack.isShared,\n  };\n};\n\nconst MapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => ({\n  shareSong: () => dispatch(shareSong()),\n});\n\n// Always use this import { withStyles } from '@material-ui/core/styles';\n// https://github.com/mui-org/material-ui/issues/15528#issuecomment-487849529\nexport default connect(MapStateToProps, MapDispatchToProps)(withStyles(styles)(Repost));\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { IProps, ICallbackState } from 'react-spotify-web-playback/lib/types/common';\nimport { IPlayerTrack } from 'react-spotify-web-playback/lib/types/spotify';\n\nimport { Theme, createStyles, withStyles, WithStyles } from '@material-ui/core';\n\nimport { SpotifyService } from '../../services';\nimport { Colors, Spacing } from '../../styles';\nimport { setFocused } from '../../redux/actions';\nimport { Repost } from '../repost';\n\ntype ReducedSpotifyPlayerProps = Pick<IProps, Exclude<keyof IProps, 'token'>>;\ninterface OwnProps extends ReducedSpotifyPlayerProps {\n  isMobile?: boolean;\n}\ninterface StyleProps extends WithStyles<typeof styles> {}\ninterface DispatchProps {\n  setFocusedTrack: typeof setFocused;\n}\n\ntype PlayerProps = OwnProps & DispatchProps & StyleProps;\n\ninterface PlayerState {\n  token: string;\n  deviceId: string;\n  playerIsActive: boolean;\n}\nclass Player extends React.Component<PlayerProps, PlayerState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      token: '',\n      deviceId: '',\n      playerIsActive: false,\n    };\n  }\n\n  componentDidMount() {\n    const token = SpotifyService.resolveUserToken();\n    if (token) {\n      this.setState({ token });\n    }\n  }\n\n  setDevice(deviceId: string, isActive: boolean) {\n    const { deviceId: stateDeviceId } = this.state;\n    if (!stateDeviceId && deviceId) {\n      if (!isActive) {\n        this.setState({ deviceId });\n        SpotifyService.transferPlayback([deviceId]);\n      }\n    }\n  }\n\n  syncCurrentlyPlaying(track: IPlayerTrack) {\n    if (!track.artists && !track.id && !track.name) {\n      return;\n    }\n    SpotifyService.getTracks([track.id]).then((tracksObj) => {\n      const { tracks } = tracksObj;\n      if (!tracks || !tracks.length) {\n        return;\n      }\n      const track = tracks[0];\n      this.props.setFocusedTrack(track);\n    });\n  }\n\n  handlePlayerCallback(playerData: ICallbackState) {\n    const { deviceId, isActive, track } = playerData; // Top level deviceId is always this device\n    this.setDevice(deviceId, isActive);\n    this.syncCurrentlyPlaying(track);\n    this.setState({ playerIsActive: isActive });\n  }\n\n  render() {\n    const { classes, isMobile } = this.props;\n    const { playerIsActive } = this.state;\n    return (\n      <div className={classes.container}>\n        {playerIsActive && <Repost className={classes.repost}></Repost>}\n        <SpotifyPlayer\n          name={`Shareable Web Player (${isMobile ? 'Mobile' : 'Desktop'})`}\n          styles={playerStyles}\n          token={this.state.token}\n          autoPlay={true}\n          showSaveIcon={true}\n          persistDeviceSelection={true}\n          callback={this.handlePlayerCallback.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nconst playerStyles = {\n  sliderColor: Colors.ShareableLavender,\n  savedColor: Colors.ShareableLavender,\n  bgColor: Colors.Header,\n  color: Colors.White,\n  trackNameColor: Colors.White,\n  trackArtistColor: Colors.White,\n  sliderTrackColor: Colors.c500,\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    playerStyles,\n    repost: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'fixed',\n      backgroundColor: 'transparent',\n      marginLeft: Spacing.s64,\n      width: 50,\n      height: 50,\n      left: '50%',\n      bottom: 0,\n      zIndex: 1,\n      [theme.breakpoints.down('xs')]: {\n        marginLeft: 0,\n        left: 0,\n      },\n    },\n  });\n\nconst MapDispatchToProps = {\n  setFocusedTrack: setFocused,\n};\n\nexport default connect(undefined, MapDispatchToProps)(withStyles(styles)(Player));\n\n/**\n * TODO: Fix\n * https://api.spotify.com/v1/me/player/play\n * error: {status: 404, message: \"Player command failed: No active device found\", reason: \"NO_ACTIVE_DEVICE\"}\n    message: \"Player command failed: No active device found\"\n    reason: \"NO_ACTIVE_DEVICE\"\n    status: 404\n\n * https://api.spotify.com/v1/me/player\n *{error: {status: 404, message: \"Device not found\"}}\nerror: {status: 404, message: \"Device not found\"}\n */\n","import React from 'react';\n\nimport { Player } from '../player';\n\ninterface FooterProps {\n  isMobile?: boolean;\n}\nexport class Footer extends React.Component<FooterProps> {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div style={styles.footer}>\n        <Player {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n  },\n};\n","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { isWidthDown, withWidth } from '@material-ui/core';\n\nimport logo from '../../assets/logo-white.svg';\nimport { FontSizes, Colors, APP_HEADER_HEIGHT } from '../../styles';\nimport { AppRoutes, AppRoute } from '../../utils';\n\ninterface SizeProps {\n  width: any;\n}\ninterface OwnProps {\n  isMobile: boolean;\n  loggedIn: boolean;\n}\n\ntype HeaderProps = SizeProps & OwnProps;\n\ninterface HeaderState {}\nclass Header extends React.Component<HeaderProps, HeaderState> {\n  componentDidMount() {}\n\n  renderHeaderItem(isRightAligned: boolean = false) {\n    const keepRightHeaders = (route: AppRoute) => {\n      return !route.header || (route.header && route.rightAlignedHeader === true);\n    };\n    const keepLeftHeaders = (route: AppRoute) => {\n      return !route.header || (route.header && !route.rightAlignedHeader);\n    };\n\n    return AppRoutes.filter((route) => (isRightAligned ? keepRightHeaders(route) : keepLeftHeaders(route))).map(\n      (route) => {\n        return (\n          <NavLink\n            key={route.path}\n            exact\n            to={route.path}\n            style={styles.headerItem}\n            activeStyle={styles.headerItemActive}\n          >\n            {route.header}\n          </NavLink>\n        );\n      }\n    );\n  }\n\n  get splashBgColor() {\n    const { loggedIn, width } = this.props;\n\n    return (\n      (!loggedIn &&\n        (isWidthDown('xs', width)\n          ? { backgroundColor: Colors.HeaderSplashMobile }\n          : { backgroundColor: Colors.HeaderSplashDesktop })) ||\n      {}\n    );\n  }\n\n  get responsiveHeaderStyle() {\n    const { width } = this.props;\n    let responsiveHeaderStyle = {\n      ...styles.headerContents,\n      ...this.splashBgColor,\n    };\n    if (isWidthDown('xs', width)) {\n      responsiveHeaderStyle = {\n        ...responsiveHeaderStyle,\n        fontSize: (responsiveHeaderStyle.fontSize as number) - 6,\n      };\n    }\n\n    return responsiveHeaderStyle;\n  }\n\n  get responsiveLeftHeaderStyle() {\n    const { isMobile } = this.props;\n    return { ...styles.headerLeft, width: isMobile ? 250 : 300 };\n  }\n\n  render() {\n    return (\n      <div style={styles.header}>\n        <div style={this.responsiveHeaderStyle} className={'AppHeader-padding'}>\n          <div style={this.responsiveLeftHeaderStyle}>\n            <NavLink exact to={'/'} style={styles.headerItem} activeStyle={styles.headerItemActive}>\n              <img style={styles.logo} src={logo} alt=\"logo\" />\n            </NavLink>\n            {this.renderHeaderItem()}\n          </div>\n          <div style={styles.headerRight}>{this.renderHeaderItem(true)}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  header: {\n    width: '100%',\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    backgroundColor: Colors.Header,\n    height: APP_HEADER_HEIGHT,\n    zIndex: 2,\n  },\n  headerContents: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '100%',\n    ...FontSizes.Medium,\n  },\n  logo: {\n    width: 20,\n    height: 20,\n  },\n  headerLeft: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: 300,\n  },\n  headerRight: {\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n  headerItem: {\n    display: 'flex',\n    cursor: 'pointer',\n    textDecoration: 'none',\n    color: Colors.White,\n  },\n  headerItemActive: {\n    fontWeight: 700,\n  },\n};\n\nexport default withWidth()(Header);\n","import * as AppStateTypes from 'AppStateTypes';\nimport { ActionTypes } from '../actions';\nimport { Track } from '../../services';\n\nexport interface FocusedTrack {\n  track: Track;\n  isPlaying: boolean;\n  isShared: boolean;\n  latestShares: Track[];\n}\n\nexport const initialState: FocusedTrack = {\n  track: {} as Track,\n  isPlaying: false,\n  isShared: false,\n  latestShares: [],\n};\n\nexport const focusedTrackReducer = (state: FocusedTrack = initialState, action: AppStateTypes.RootAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_FOCUSED: {\n      const { track: { id } = {} } = state;\n      // Only update the store if it is a new track\n      if (action.payload && id !== action.payload.id) {\n        return {\n          ...state,\n          track: action.payload,\n          isPlaying: true,\n          isShared: false, // Need to update to check shareable service\n        };\n      } else {\n        return state;\n      }\n    }\n    case ActionTypes.PAUSE_FOCUSED: {\n      return {\n        ...state,\n        track: action.payload,\n        isPlaying: false,\n      };\n    }\n    case ActionTypes.SET_SHARED: {\n      if (state.latestShares.find((track) => track.id === action.payload.id)) {\n        return {\n          ...state,\n          isShared: true,\n        };\n      }\n      return {\n        ...state,\n        isShared: true,\n        latestShares: [action.payload, ...state.latestShares],\n      };\n    }\n    case ActionTypes.CLEAR_LATEST_SHARES: {\n      return {\n        ...state,\n        latestShares: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import * as AppStateTypes from 'AppStateTypes';\nimport { ActionTypes } from '../actions/';\nimport { ShareableAccount } from '../../services/shareable';\n\nexport interface Account extends ShareableAccount {\n  accountId: string;\n}\n\nexport const initialState: Account = {\n  accountId: '',\n  spotifyUserId: '',\n};\n\nexport const accountReducer = (state: Account = initialState, action: AppStateTypes.RootAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_USER: {\n      const { _id } = action.payload;\n      return {\n        ...state,\n        ...action.payload,\n        accountId: _id,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { focusedTrackReducer } from './focused-track.reducer';\nimport { accountReducer } from './account.reducer';\n\nconst rootReducer = combineReducers({\n  focusedTrack: focusedTrackReducer,\n  account: accountReducer,\n});\n\nexport default rootReducer;\n","import { createStore, Store, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk';\n\nimport * as AppStateTypes from 'AppStateTypes';\n\nimport config from '../config';\n\nimport rootReducer from './reducers';\n\nconst middleware = [reduxThunk];\n\nlet store: Store<AppStateTypes.ReducerState>;\n\nif (config.obfuscateDevTools) {\n  store = createStore(rootReducer, applyMiddleware(...middleware));\n} else {\n  // Only allow redux dev tools in a dev environment\n  store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\n}\n\nexport default store;\n","import './App.css';\n\nimport React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport withSizes from 'react-sizes';\n\nimport { hot } from 'react-hot-loader/root';\n\nimport { Provider } from 'react-redux';\n\nimport backgroundImage from './assets/bg.jpg';\n\nimport { Colors, APP_FOOTER_HEIGHT, APP_HEADER_HEIGHT, Spacing } from './styles';\nimport { Footer, Header, ScrollToTop } from './components';\nimport { Home } from './pages';\nimport { SpotifyService } from './services';\nimport { AppRoutes, mapSizesToProps } from './utils';\nimport store from './redux/store';\n\ninterface AppProps {\n  isMobile: boolean;\n}\n\ninterface AppState {\n  loggedIn: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  async componentDidMount() {\n    const token = SpotifyService.resolveUserToken();\n    this.setState({ loggedIn: !!token });\n  }\n\n  renderRoutes() {\n    const { loggedIn } = this.state;\n    const { isMobile } = this.props;\n\n    let responsiveStyle = {\n      ...styles.routeContainer,\n    };\n\n    return (\n      <div style={responsiveStyle} className={'App-margins'}>\n        {!loggedIn && <Home />}\n        {loggedIn && (\n          <Switch>\n            {AppRoutes.map((route) => {\n              const { path, page: Page } = route;\n              return (\n                <Route key={route.path} exact path={path} render={(props) => <Page {...props} isMobile={isMobile} />} />\n              );\n            })}\n            ;\n          </Switch>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loggedIn } = this.state;\n    const { isMobile } = this.props;\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <ScrollToTop />\n          <div style={styles.app}>\n            <Header loggedIn={loggedIn} isMobile={isMobile} />\n            {this.renderRoutes()}\n            {loggedIn && <Footer isMobile={isMobile} />}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default hot(withSizes(mapSizesToProps)(App));\n\nconst styles: Record<string, React.CSSProperties> = {\n  app: {\n    backgroundImage: `linear-gradient(to top, rgba(24, 13, 34, 0.52), rgba(2, 10, 26, 0.78)), url(${backgroundImage})`,\n    backgroundSize: '100% 100%',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    color: Colors.c100,\n    fontFamily: 'Muli',\n    fontWeight: 500,\n  },\n  routeContainer: {\n    marginTop: APP_HEADER_HEIGHT,\n    marginBottom: APP_FOOTER_HEIGHT,\n    paddingTop: Spacing.s24,\n  },\n};\n","export const mapSizesToProps = ({ width }: any) => ({\n  isMobile: width < 480,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/share-filled-white.44787756.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.336ebad2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default-profile.2f498bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.a16ab3be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/person.50578c96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/badminton.c7bae4fd.png\";","module.exports = __webpack_public_path__ + \"static/media/pineapple.e4427de6.svg\";","module.exports = __webpack_public_path__ + \"static/media/dinosaur.206b712e.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-white.d41f832a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.ae32626f.svg\";"],"sourceRoot":""}